ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****  *
   3:Src/main.c    ****  * Sanjay Gounder
   4:Src/main.c    ****  * u1144264
   5:Src/main.c    ****  *
   6:Src/main.c    **** ******************************************************************************
   7:Src/main.c    **** * File Name          : main.c
   8:Src/main.c    **** * Description        : Main program body
   9:Src/main.c    **** ******************************************************************************
  10:Src/main.c    **** ** This notice applies to any and all portions of this file
  11:Src/main.c    **** * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    **** * USER CODE END. Other portions of this file, whether
  13:Src/main.c    **** * inserted by the user or by software development tools
  14:Src/main.c    **** * are owned by their respective copyright owners.
  15:Src/main.c    **** *
  16:Src/main.c    **** * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****  *
  18:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****  * are permitted provided that the following conditions are met:
  20:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****  *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****  *      and/or other materials provided with the distribution.
  25:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****  *      without specific prior written permission.
  28:Src/main.c    ****  *
  29:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 2


  33:Src/main.c    ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****  *
  40:Src/main.c    ****  ******************************************************************************
  41:Src/main.c    ****  */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** #include "stm32f072xb.h"
  47:Src/main.c    **** void _Error_Handler(char * file, int line);
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END Includes */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN PV */
  56:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** void SystemClock_Config(void);
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN PFP */
  64:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END 0 */
  71:Src/main.c    **** 
  72:Src/main.c    **** int main(void)
  73:Src/main.c    **** {
  74:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
  75:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
  76:Src/main.c    **** 
  77:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE(); // Enable the GPIOB clock in the RCC
  78:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE(); // Enable the GPIOC clock in the RCC
  79:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE(); // Enable the ADC1 clock in the RCC
  80:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function (GPIOC w/out PC0) -- LEDs
  81:Src/main.c    ****   GPIO_InitTypeDef initStr = {GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9,
  82:Src/main.c    ****                               GPIO_MODE_OUTPUT_PP,
  83:Src/main.c    ****                               GPIO_SPEED_FREQ_LOW,
  84:Src/main.c    ****                               GPIO_NOPULL};
  85:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &initStr); // Initialize pins PC6,7,8 & PC9 (LEDs)
  86:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function (PB0)
  87:Src/main.c    ****   // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET); // Start PC8 high (orange)
  88:Src/main.c    ****   
  89:Src/main.c    **** 
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 3


  90:Src/main.c    ****   // ******** Initializing ADC ******** //
  91:Src/main.c    ****   // 1) Set the desired operating mode, data resolution, and trigger source
  92:Src/main.c    ****   // 2) Start the ADC calibration
  93:Src/main.c    ****   // 3) Wait for the hardware to signal that the calibration has completed.
  94:Src/main.c    ****   // 4) Set the peripheral enable.
  95:Src/main.c    ****   // 5) Wait until the ADC ready flag is set
  96:Src/main.c    ****   // 6) Start the ADC conversion. 
  97:Src/main.c    **** 
  98:Src/main.c    ****   // ******** Initializing DAC ******** //
  99:Src/main.c    ****   // 1) Set the trigger source for the channel/output update
 100:Src/main.c    ****   // 2) Enable the channel used for output.
 101:Src/main.c    **** 
 102:Src/main.c    ****   // Analog functions of GPIO pins
 103:Src/main.c    ****   // PC0 --> Additional Function: ADC_IN10
 104:Src/main.c    ****   // PA4 --> Additional Function: DAC_OUT1
 105:Src/main.c    **** 
 106:Src/main.c    ****   // Enable GPIOA/C in RCC peripheral
 107:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 108:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 109:Src/main.c    **** 
 110:Src/main.c    ****   // ******** 6.1 Measuring a Potentiometer With the ADC ******** //
 111:Src/main.c    ****   // Select a GPIO pin to use as the ADC input / no pull-up down resistors
 112:Src/main.c    ****   GPIOC->MODER |= (1 << 0); // PC0 set to analog mode (11)      
 113:Src/main.c    ****   GPIOC->MODER |= (1 << 1); // PC0 set to analog mode (11)
 114:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 0); // no pull-up down (00)
 115:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 1); // no pull-up down (00)
 116:Src/main.c    ****   // Enable the ADC/DAC in the RCC peripheral
 117:Src/main.c    ****   RCC->APB2ENR |= RCC_APB2ENR_ADCEN;
 118:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 119:Src/main.c    **** 
 120:Src/main.c    ****   // Configure the ADC to 8-bit resolution, continuous conversion mode, hardware triggers disabled 
 121:Src/main.c    ****   ADC1->CFGR1 |= (1 << 4); // Set it to 8-bit resolution (10)
 122:Src/main.c    ****   ADC1->CFGR1 |= (1 << 13); // Set it to continuous conversion mode (1)
 123:Src/main.c    ****   // ADC1->CFGR1 &= ~(1 << 11); // Hardware trigger disabled (00)
 124:Src/main.c    ****   // ADC1->CFGR1 &= ~(1 << 10); // Hardware trigger disabled (00)
 125:Src/main.c    ****   // Select/enable the input pinâ€™s channel for ADC conversion (ADC Channel Selection Register (AD
 126:Src/main.c    ****   ADC1->CHSELR |= (1 << 10); //PC0 (ADC_IN10) selected for ADC conversion
 127:Src/main.c    **** 
 128:Src/main.c    ****   // Set to wait conversion
 129:Src/main.c    ****   ADC1->CFGR1 |= (1 << 14);
 130:Src/main.c    ****   // Perform a self-calibration and enable
 131:Src/main.c    ****   ADC1->CR &= ~(1); // Set ADEN to off
 132:Src/main.c    ****   ADC1->CFGR1 &= ~(1); // Set DMAEN to off
 133:Src/main.c    **** 
 134:Src/main.c    ****   // Set ADCAL = 1
 135:Src/main.c    ****   ADC1->CR |= (1 << 31);
 136:Src/main.c    **** 
 137:Src/main.c    ****   // Wait until ADCAL = 0
 138:Src/main.c    ****   while ((ADC1->CR & (1 <<31)) == (1 << 31)) {}
 139:Src/main.c    ****   ADC1->CR |= 1; // Enable ADC
 140:Src/main.c    **** 
 141:Src/main.c    ****   ADC1->CR |= (1 << 2); // Start ADC
 142:Src/main.c    **** 
 143:Src/main.c    ****   // ******** 6.2 Generating Waveforms with the DAC. ******** //
 144:Src/main.c    ****   // Set PA4 to analog (10)
 145:Src/main.c    ****   GPIOA->MODER = (1 << 8);
 146:Src/main.c    ****   GPIOA->MODER = (1 << 9);
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 4


 147:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 16); // no pull-up down (00)
 148:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 17); // no pull-up down (00)
 149:Src/main.c    **** 	
 150:Src/main.c    ****   // Set the used DAC channel to software trigger mode.
 151:Src/main.c    ****   DAC1->CR = 0; //Clear
 152:Src/main.c    **** 	DAC1->CR |= (7 << 3); //SW Trigger Mode
 153:Src/main.c    **** 	DAC1->SWTRIGR = 0;
 154:Src/main.c    **** 	DAC1->SWTRIGR |= (1 << 0); //SW Channel 1 Trigger
 155:Src/main.c    **** 
 156:Src/main.c    ****   // Enable the used DAC channel.
 157:Src/main.c    ****   DAC1->CR |= (1 << 0);
 158:Src/main.c    **** 
 159:Src/main.c    ****   // Sine Wave: 8-bit, 32 samples/cycle
 160:Src/main.c    **** 	const uint8_t sine_table[32] = {127,151,175,197,216,232,244,251,254,251,244,
 161:Src/main.c    **** 	232,216,197,175,151,127,102,78,56,37,21,9,2,0,2,9,21,37,56,78,102};
 162:Src/main.c    **** 	// Triangle Wave: 8-bit, 32 samples/cycle
 163:Src/main.c    **** 	const uint8_t triangle_table[32] = {0,15,31,47,63,79,95,111,127,142,158,174,
 164:Src/main.c    **** 	190,206,222,238,254,238,222,206,190,174,158,142,127,111,95,79,63,47,31,15};
 165:Src/main.c    **** 	// Sawtooth Wave: 8-bit, 32 samples/cycle
 166:Src/main.c    **** 	const uint8_t sawtooth_table[32] = {0,7,15,23,31,39,47,55,63,71,79,87,95,103,
 167:Src/main.c    **** 	111,119,127,134,142,150,158,166,174,182,190,198,206,214,222,230,238,246};
 168:Src/main.c    **** 	// Square Wave: 8-bit, 32 samples/cycle
 169:Src/main.c    **** 	const uint8_t square_table[32] = {254,254,254,254,254,254,254,254,254,254,
 170:Src/main.c    **** 	254,254,254,254,254,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 171:Src/main.c    **** 
 172:Src/main.c    ****   // In the main application loop, read the ADC data register and turn on/off LEDs depending on the
 173:Src/main.c    ****   int16_t threshold = 0;
 174:Src/main.c    ****   while (1) {		
 175:Src/main.c    **** 
 176:Src/main.c    ****     // ******** 6.2 Generating Waveforms with the DAC. ******** //
 177:Src/main.c    ****     for(int i = 0; i < 32; i++){
 178:Src/main.c    **** 				DAC1->DHR8R1 = sine_table[i]; //Change for triange/saw
 179:Src/main.c    ****         if (i == 31){
 180:Src/main.c    ****           i = 0;
 181:Src/main.c    ****         }
 182:Src/main.c    **** 				HAL_Delay(1);
 183:Src/main.c    ****     }
 184:Src/main.c    ****     
 185:Src/main.c    ****     // ******** 6.1 Measuring a Potentiometer With the ADC ******** //
 186:Src/main.c    ****     // while((ADC1->ISR & ADC_ISR_EOS) == 0){} // wait for end of sequence
 187:Src/main.c    **** 		// // Reset
 188:Src/main.c    **** 		// ADC1->ISR |= ADC_ISR_EOS;
 189:Src/main.c    **** 
 190:Src/main.c    ****     // if (ADC1->DR < 60){ 
 191:Src/main.c    ****     //   GPIOC->ODR |= (1 << 6); // Red high only
 192:Src/main.c    ****     //   GPIOC->ODR &= ~(1 << 7) |~(1 << 8)|~(1 << 9) ; // Turn off other LEDs
 193:Src/main.c    **** 		// }
 194:Src/main.c    **** 		// else if (ADC1->DR < 120){
 195:Src/main.c    ****     //   GPIOC->ODR |= (1 << 6) | (1<<7); // Red, Blue high
 196:Src/main.c    ****     //   GPIOC->ODR &= ~(1 << 8) |~(1 << 9); // Turn off green orange LED
 197:Src/main.c    **** 		// }
 198:Src/main.c    **** 		// else if (ADC1->DR < 180){
 199:Src/main.c    ****     //   GPIOC->ODR |= (1 << 6) | (1<<7)| (1 << 8); // Red, Green, Blue high
 200:Src/main.c    ****     //   GPIOC->ODR &= ~(1 << 9); // Turn off orange LED
 201:Src/main.c    **** 		// }
 202:Src/main.c    **** 		// else {
 203:Src/main.c    **** 		// 	GPIOC->ODR |= (1 << 6) | (1<<7)| (1 << 8) | (1 << 9); // All LEDs high
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 5


 204:Src/main.c    **** 		// }
 205:Src/main.c    ****     // ADC1->CFGR1 ^= ADC_CFGR1_SCANDIR;
 206:Src/main.c    **** 
 207:Src/main.c    **** 		HAL_Delay(100);
 208:Src/main.c    **** 	}
 209:Src/main.c    **** 
 210:Src/main.c    **** }
 211:Src/main.c    **** 
 212:Src/main.c    **** 
 213:Src/main.c    **** 
 214:Src/main.c    **** /** System Clock Configuration
 215:Src/main.c    **** */
 216:Src/main.c    **** void SystemClock_Config(void)
 217:Src/main.c    **** {
 218:Src/main.c    **** 
 219:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 220:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 221:Src/main.c    **** 
 222:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 223:Src/main.c    ****     */
 224:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 225:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 226:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 228:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 229:Src/main.c    ****   {
 230:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 231:Src/main.c    ****   }
 232:Src/main.c    **** 
 233:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 234:Src/main.c    ****     */
 235:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 236:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 237:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 238:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 239:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 240:Src/main.c    **** 
 241:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 242:Src/main.c    ****   {
 243:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 244:Src/main.c    ****   }
 245:Src/main.c    **** 
 246:Src/main.c    ****     /**Configure the Systick interrupt time
 247:Src/main.c    ****     */
 248:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 249:Src/main.c    **** 
 250:Src/main.c    ****     /**Configure the Systick
 251:Src/main.c    ****     */
 252:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 253:Src/main.c    **** 
 254:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 255:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 256:Src/main.c    **** }
 257:Src/main.c    **** 
 258:Src/main.c    **** /* USER CODE BEGIN 4 */
 259:Src/main.c    **** 
 260:Src/main.c    **** /* USER CODE END 4 */
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 6


 261:Src/main.c    **** 
 262:Src/main.c    **** /**
 263:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 264:Src/main.c    ****   * @param  None
 265:Src/main.c    ****   * @retval None
 266:Src/main.c    ****   */
 267:Src/main.c    **** void _Error_Handler(char * file, int line)
 268:Src/main.c    **** {
  27              		.loc 1 268 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 269:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 270:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 271:Src/main.c    ****   while(1)
  35              		.loc 1 271 3 view .LVU1
 272:Src/main.c    ****   {
 273:Src/main.c    ****   }
  36              		.loc 1 273 3 view .LVU2
 271:Src/main.c    ****   {
  37              		.loc 1 271 8 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 217:Src/main.c    **** 
  56              		.loc 1 217 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 219:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 219 3 view .LVU5
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 7


 220:Src/main.c    **** 
  68              		.loc 1 220 3 view .LVU6
 224:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 224 3 view .LVU7
 224:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 224 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 225:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 225 3 is_stmt 1 view .LVU9
 225:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 225 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 226 3 is_stmt 1 view .LVU11
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 226 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 227:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 227 3 is_stmt 1 view .LVU13
 227:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 227 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 228:Src/main.c    ****   {
  85              		.loc 1 228 3 is_stmt 1 view .LVU15
 228:Src/main.c    ****   {
  86              		.loc 1 228 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 228:Src/main.c    ****   {
  90              		.loc 1 228 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 235:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  93              		.loc 1 235 3 is_stmt 1 view .LVU18
 235:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  94              		.loc 1 235 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 237:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 237 3 is_stmt 1 view .LVU20
 237:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 237 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 238:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 238 3 is_stmt 1 view .LVU22
 238:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 238 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 239:Src/main.c    **** 
 104              		.loc 1 239 3 is_stmt 1 view .LVU24
 239:Src/main.c    **** 
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 8


 105              		.loc 1 239 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 241:Src/main.c    ****   {
 107              		.loc 1 241 3 is_stmt 1 view .LVU26
 241:Src/main.c    ****   {
 108              		.loc 1 241 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 241:Src/main.c    ****   {
 113              		.loc 1 241 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 248:Src/main.c    **** 
 116              		.loc 1 248 3 is_stmt 1 view .LVU29
 248:Src/main.c    **** 
 117              		.loc 1 248 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 248:Src/main.c    **** 
 120              		.loc 1 248 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 252:Src/main.c    **** 
 127              		.loc 1 252 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 255:Src/main.c    **** }
 131              		.loc 1 255 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 256:Src/main.c    **** 
 138              		.loc 1 256 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 230:Src/main.c    ****   }
 143              		.loc 1 230 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e E621     		movs	r1, #230
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 243:Src/main.c    ****   }
 149              		.loc 1 243 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 9


 151 0066 F321     		movs	r1, #243
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  73:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
 170              		.loc 1 73 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 160
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 20
 177              		.cfi_offset 4, -20
 178              		.cfi_offset 5, -16
 179              		.cfi_offset 6, -12
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 C646     		mov	lr, r8
 183 0004 00B5     		push	{lr}
 184              	.LCFI3:
 185              		.cfi_def_cfa_offset 24
 186              		.cfi_offset 8, -24
 187 0006 A8B0     		sub	sp, sp, #160
 188              	.LCFI4:
 189              		.cfi_def_cfa_offset 184
  74:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
 190              		.loc 1 74 3 view .LVU38
 191 0008 FFF7FEFF 		bl	HAL_Init
 192              	.LVL10:
  75:Src/main.c    **** 
 193              		.loc 1 75 3 view .LVU39
 194 000c FFF7FEFF 		bl	SystemClock_Config
 195              	.LVL11:
  77:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE(); // Enable the GPIOC clock in the RCC
 196              		.loc 1 77 3 view .LVU40
 197              	.LBB2:
  77:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE(); // Enable the GPIOC clock in the RCC
 198              		.loc 1 77 3 view .LVU41
  77:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE(); // Enable the GPIOC clock in the RCC
 199              		.loc 1 77 3 view .LVU42
 200 0010 664C     		ldr	r4, .L18
 201 0012 6369     		ldr	r3, [r4, #20]
 202 0014 8022     		movs	r2, #128
 203 0016 D202     		lsls	r2, r2, #11
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 10


 204 0018 1343     		orrs	r3, r2
 205 001a 6361     		str	r3, [r4, #20]
  77:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE(); // Enable the GPIOC clock in the RCC
 206              		.loc 1 77 3 view .LVU43
 207 001c 6369     		ldr	r3, [r4, #20]
 208 001e 1340     		ands	r3, r2
 209 0020 0093     		str	r3, [sp]
  77:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE(); // Enable the GPIOC clock in the RCC
 210              		.loc 1 77 3 view .LVU44
 211 0022 009B     		ldr	r3, [sp]
 212              	.LBE2:
  77:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE(); // Enable the GPIOC clock in the RCC
 213              		.loc 1 77 3 view .LVU45
  78:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE(); // Enable the ADC1 clock in the RCC
 214              		.loc 1 78 3 view .LVU46
 215              	.LBB3:
  78:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE(); // Enable the ADC1 clock in the RCC
 216              		.loc 1 78 3 view .LVU47
  78:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE(); // Enable the ADC1 clock in the RCC
 217              		.loc 1 78 3 view .LVU48
 218 0024 6369     		ldr	r3, [r4, #20]
 219 0026 8027     		movs	r7, #128
 220 0028 3F03     		lsls	r7, r7, #12
 221 002a 3B43     		orrs	r3, r7
 222 002c 6361     		str	r3, [r4, #20]
  78:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE(); // Enable the ADC1 clock in the RCC
 223              		.loc 1 78 3 view .LVU49
 224 002e 6369     		ldr	r3, [r4, #20]
 225 0030 3B40     		ands	r3, r7
 226 0032 0193     		str	r3, [sp, #4]
  78:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE(); // Enable the ADC1 clock in the RCC
 227              		.loc 1 78 3 view .LVU50
 228 0034 019B     		ldr	r3, [sp, #4]
 229              	.LBE3:
  78:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE(); // Enable the ADC1 clock in the RCC
 230              		.loc 1 78 3 view .LVU51
  79:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function (GPIOC w/out PC0) -- LEDs
 231              		.loc 1 79 3 view .LVU52
 232              	.LBB4:
  79:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function (GPIOC w/out PC0) -- LEDs
 233              		.loc 1 79 3 view .LVU53
  79:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function (GPIOC w/out PC0) -- LEDs
 234              		.loc 1 79 3 view .LVU54
 235 0036 A369     		ldr	r3, [r4, #24]
 236 0038 8026     		movs	r6, #128
 237 003a B600     		lsls	r6, r6, #2
 238 003c 3343     		orrs	r3, r6
 239 003e A361     		str	r3, [r4, #24]
  79:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function (GPIOC w/out PC0) -- LEDs
 240              		.loc 1 79 3 view .LVU55
 241 0040 A369     		ldr	r3, [r4, #24]
 242 0042 3340     		ands	r3, r6
 243 0044 0293     		str	r3, [sp, #8]
  79:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function (GPIOC w/out PC0) -- LEDs
 244              		.loc 1 79 3 view .LVU56
 245 0046 029B     		ldr	r3, [sp, #8]
 246              	.LBE4:
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 11


  79:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function (GPIOC w/out PC0) -- LEDs
 247              		.loc 1 79 3 view .LVU57
  81:Src/main.c    ****                               GPIO_MODE_OUTPUT_PP,
 248              		.loc 1 81 3 view .LVU58
  81:Src/main.c    ****                               GPIO_MODE_OUTPUT_PP,
 249              		.loc 1 81 20 is_stmt 0 view .LVU59
 250 0048 1422     		movs	r2, #20
 251 004a 0021     		movs	r1, #0
 252 004c 23A8     		add	r0, sp, #140
 253 004e FFF7FEFF 		bl	memset
 254              	.LVL12:
 255 0052 F023     		movs	r3, #240
 256 0054 9B00     		lsls	r3, r3, #2
 257 0056 2393     		str	r3, [sp, #140]
 258 0058 0123     		movs	r3, #1
 259 005a 9846     		mov	r8, r3
 260 005c 2493     		str	r3, [sp, #144]
  85:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function (PB0)
 261              		.loc 1 85 3 is_stmt 1 view .LVU60
 262 005e 544D     		ldr	r5, .L18+4
 263 0060 23A9     		add	r1, sp, #140
 264 0062 2800     		movs	r0, r5
 265 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 266              	.LVL13:
 107:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 267              		.loc 1 107 3 view .LVU61
 107:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 268              		.loc 1 107 6 is_stmt 0 view .LVU62
 269 0068 6369     		ldr	r3, [r4, #20]
 107:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 270              		.loc 1 107 15 view .LVU63
 271 006a 1F43     		orrs	r7, r3
 272 006c 6761     		str	r7, [r4, #20]
 108:Src/main.c    **** 
 273              		.loc 1 108 3 is_stmt 1 view .LVU64
 108:Src/main.c    **** 
 274              		.loc 1 108 6 is_stmt 0 view .LVU65
 275 006e 6269     		ldr	r2, [r4, #20]
 108:Src/main.c    **** 
 276              		.loc 1 108 15 view .LVU66
 277 0070 8023     		movs	r3, #128
 278 0072 9B02     		lsls	r3, r3, #10
 279 0074 1343     		orrs	r3, r2
 280 0076 6361     		str	r3, [r4, #20]
 112:Src/main.c    ****   GPIOC->MODER |= (1 << 1); // PC0 set to analog mode (11)
 281              		.loc 1 112 3 is_stmt 1 view .LVU67
 112:Src/main.c    ****   GPIOC->MODER |= (1 << 1); // PC0 set to analog mode (11)
 282              		.loc 1 112 8 is_stmt 0 view .LVU68
 283 0078 2B68     		ldr	r3, [r5]
 112:Src/main.c    ****   GPIOC->MODER |= (1 << 1); // PC0 set to analog mode (11)
 284              		.loc 1 112 16 view .LVU69
 285 007a 4246     		mov	r2, r8
 286 007c 1343     		orrs	r3, r2
 287 007e 2B60     		str	r3, [r5]
 113:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 0); // no pull-up down (00)
 288              		.loc 1 113 3 is_stmt 1 view .LVU70
 113:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 0); // no pull-up down (00)
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 12


 289              		.loc 1 113 8 is_stmt 0 view .LVU71
 290 0080 2B68     		ldr	r3, [r5]
 113:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 0); // no pull-up down (00)
 291              		.loc 1 113 16 view .LVU72
 292 0082 0132     		adds	r2, r2, #1
 293 0084 1343     		orrs	r3, r2
 294 0086 2B60     		str	r3, [r5]
 114:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 1); // no pull-up down (00)
 295              		.loc 1 114 3 is_stmt 1 view .LVU73
 114:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 1); // no pull-up down (00)
 296              		.loc 1 114 8 is_stmt 0 view .LVU74
 297 0088 EB68     		ldr	r3, [r5, #12]
 114:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 1); // no pull-up down (00)
 298              		.loc 1 114 17 view .LVU75
 299 008a EB60     		str	r3, [r5, #12]
 115:Src/main.c    ****   // Enable the ADC/DAC in the RCC peripheral
 300              		.loc 1 115 3 is_stmt 1 view .LVU76
 115:Src/main.c    ****   // Enable the ADC/DAC in the RCC peripheral
 301              		.loc 1 115 8 is_stmt 0 view .LVU77
 302 008c EB68     		ldr	r3, [r5, #12]
 115:Src/main.c    ****   // Enable the ADC/DAC in the RCC peripheral
 303              		.loc 1 115 17 view .LVU78
 304 008e EB60     		str	r3, [r5, #12]
 117:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 305              		.loc 1 117 3 is_stmt 1 view .LVU79
 117:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 306              		.loc 1 117 6 is_stmt 0 view .LVU80
 307 0090 A369     		ldr	r3, [r4, #24]
 117:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 308              		.loc 1 117 16 view .LVU81
 309 0092 1E43     		orrs	r6, r3
 310 0094 A661     		str	r6, [r4, #24]
 118:Src/main.c    **** 
 311              		.loc 1 118 3 is_stmt 1 view .LVU82
 118:Src/main.c    **** 
 312              		.loc 1 118 6 is_stmt 0 view .LVU83
 313 0096 E269     		ldr	r2, [r4, #28]
 118:Src/main.c    **** 
 314              		.loc 1 118 16 view .LVU84
 315 0098 8023     		movs	r3, #128
 316 009a 9B05     		lsls	r3, r3, #22
 317 009c 1343     		orrs	r3, r2
 318 009e E361     		str	r3, [r4, #28]
 121:Src/main.c    ****   ADC1->CFGR1 |= (1 << 13); // Set it to continuous conversion mode (1)
 319              		.loc 1 121 3 is_stmt 1 view .LVU85
 121:Src/main.c    ****   ADC1->CFGR1 |= (1 << 13); // Set it to continuous conversion mode (1)
 320              		.loc 1 121 7 is_stmt 0 view .LVU86
 321 00a0 444B     		ldr	r3, .L18+8
 322 00a2 DA68     		ldr	r2, [r3, #12]
 121:Src/main.c    ****   ADC1->CFGR1 |= (1 << 13); // Set it to continuous conversion mode (1)
 323              		.loc 1 121 15 view .LVU87
 324 00a4 1021     		movs	r1, #16
 325 00a6 0A43     		orrs	r2, r1
 326 00a8 DA60     		str	r2, [r3, #12]
 122:Src/main.c    ****   // ADC1->CFGR1 &= ~(1 << 11); // Hardware trigger disabled (00)
 327              		.loc 1 122 3 is_stmt 1 view .LVU88
 122:Src/main.c    ****   // ADC1->CFGR1 &= ~(1 << 11); // Hardware trigger disabled (00)
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 13


 328              		.loc 1 122 7 is_stmt 0 view .LVU89
 329 00aa D968     		ldr	r1, [r3, #12]
 122:Src/main.c    ****   // ADC1->CFGR1 &= ~(1 << 11); // Hardware trigger disabled (00)
 330              		.loc 1 122 15 view .LVU90
 331 00ac 8022     		movs	r2, #128
 332 00ae 9201     		lsls	r2, r2, #6
 333 00b0 0A43     		orrs	r2, r1
 334 00b2 DA60     		str	r2, [r3, #12]
 126:Src/main.c    **** 
 335              		.loc 1 126 3 is_stmt 1 view .LVU91
 126:Src/main.c    **** 
 336              		.loc 1 126 7 is_stmt 0 view .LVU92
 337 00b4 996A     		ldr	r1, [r3, #40]
 126:Src/main.c    **** 
 338              		.loc 1 126 16 view .LVU93
 339 00b6 8022     		movs	r2, #128
 340 00b8 D200     		lsls	r2, r2, #3
 341 00ba 0A43     		orrs	r2, r1
 342 00bc 9A62     		str	r2, [r3, #40]
 129:Src/main.c    ****   // Perform a self-calibration and enable
 343              		.loc 1 129 3 is_stmt 1 view .LVU94
 129:Src/main.c    ****   // Perform a self-calibration and enable
 344              		.loc 1 129 7 is_stmt 0 view .LVU95
 345 00be D968     		ldr	r1, [r3, #12]
 129:Src/main.c    ****   // Perform a self-calibration and enable
 346              		.loc 1 129 15 view .LVU96
 347 00c0 8022     		movs	r2, #128
 348 00c2 D201     		lsls	r2, r2, #7
 349 00c4 0A43     		orrs	r2, r1
 350 00c6 DA60     		str	r2, [r3, #12]
 131:Src/main.c    ****   ADC1->CFGR1 &= ~(1); // Set DMAEN to off
 351              		.loc 1 131 3 is_stmt 1 view .LVU97
 131:Src/main.c    ****   ADC1->CFGR1 &= ~(1); // Set DMAEN to off
 352              		.loc 1 131 7 is_stmt 0 view .LVU98
 353 00c8 9A68     		ldr	r2, [r3, #8]
 131:Src/main.c    ****   ADC1->CFGR1 &= ~(1); // Set DMAEN to off
 354              		.loc 1 131 12 view .LVU99
 355 00ca 4146     		mov	r1, r8
 356 00cc 8A43     		bics	r2, r1
 357 00ce 9A60     		str	r2, [r3, #8]
 132:Src/main.c    **** 
 358              		.loc 1 132 3 is_stmt 1 view .LVU100
 132:Src/main.c    **** 
 359              		.loc 1 132 7 is_stmt 0 view .LVU101
 360 00d0 DA68     		ldr	r2, [r3, #12]
 132:Src/main.c    **** 
 361              		.loc 1 132 15 view .LVU102
 362 00d2 8A43     		bics	r2, r1
 363 00d4 DA60     		str	r2, [r3, #12]
 135:Src/main.c    **** 
 364              		.loc 1 135 3 is_stmt 1 view .LVU103
 135:Src/main.c    **** 
 365              		.loc 1 135 7 is_stmt 0 view .LVU104
 366 00d6 9968     		ldr	r1, [r3, #8]
 135:Src/main.c    **** 
 367              		.loc 1 135 12 view .LVU105
 368 00d8 8022     		movs	r2, #128
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 14


 369 00da 1206     		lsls	r2, r2, #24
 370 00dc 0A43     		orrs	r2, r1
 371 00de 9A60     		str	r2, [r3, #8]
 138:Src/main.c    ****   ADC1->CR |= 1; // Enable ADC
 372              		.loc 1 138 3 is_stmt 1 view .LVU106
 373              	.L11:
 138:Src/main.c    ****   ADC1->CR |= 1; // Enable ADC
 374              		.loc 1 138 47 discriminator 1 view .LVU107
 138:Src/main.c    ****   ADC1->CR |= 1; // Enable ADC
 375              		.loc 1 138 32 discriminator 1 view .LVU108
 138:Src/main.c    ****   ADC1->CR |= 1; // Enable ADC
 376              		.loc 1 138 15 is_stmt 0 discriminator 1 view .LVU109
 377 00e0 344B     		ldr	r3, .L18+8
 378 00e2 9B68     		ldr	r3, [r3, #8]
 138:Src/main.c    ****   ADC1->CR |= 1; // Enable ADC
 379              		.loc 1 138 32 discriminator 1 view .LVU110
 380 00e4 002B     		cmp	r3, #0
 381 00e6 FBDB     		blt	.L11
 139:Src/main.c    **** 
 382              		.loc 1 139 3 is_stmt 1 view .LVU111
 139:Src/main.c    **** 
 383              		.loc 1 139 7 is_stmt 0 view .LVU112
 384 00e8 324B     		ldr	r3, .L18+8
 385 00ea 9968     		ldr	r1, [r3, #8]
 139:Src/main.c    **** 
 386              		.loc 1 139 12 view .LVU113
 387 00ec 0122     		movs	r2, #1
 388 00ee 1143     		orrs	r1, r2
 389 00f0 9960     		str	r1, [r3, #8]
 141:Src/main.c    **** 
 390              		.loc 1 141 3 is_stmt 1 view .LVU114
 141:Src/main.c    **** 
 391              		.loc 1 141 7 is_stmt 0 view .LVU115
 392 00f2 9968     		ldr	r1, [r3, #8]
 141:Src/main.c    **** 
 393              		.loc 1 141 12 view .LVU116
 394 00f4 0420     		movs	r0, #4
 395 00f6 0143     		orrs	r1, r0
 396 00f8 9960     		str	r1, [r3, #8]
 145:Src/main.c    ****   GPIOA->MODER = (1 << 9);
 397              		.loc 1 145 3 is_stmt 1 view .LVU117
 145:Src/main.c    ****   GPIOA->MODER = (1 << 9);
 398              		.loc 1 145 16 is_stmt 0 view .LVU118
 399 00fa 9023     		movs	r3, #144
 400 00fc DB05     		lsls	r3, r3, #23
 401 00fe 8021     		movs	r1, #128
 402 0100 4900     		lsls	r1, r1, #1
 403 0102 1960     		str	r1, [r3]
 146:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 16); // no pull-up down (00)
 404              		.loc 1 146 3 is_stmt 1 view .LVU119
 146:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 16); // no pull-up down (00)
 405              		.loc 1 146 16 is_stmt 0 view .LVU120
 406 0104 0131     		adds	r1, r1, #1
 407 0106 FF31     		adds	r1, r1, #255
 408 0108 1960     		str	r1, [r3]
 147:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 17); // no pull-up down (00)
 409              		.loc 1 147 3 is_stmt 1 view .LVU121
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 15


 147:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 17); // no pull-up down (00)
 410              		.loc 1 147 8 is_stmt 0 view .LVU122
 411 010a 294B     		ldr	r3, .L18+4
 412 010c D968     		ldr	r1, [r3, #12]
 147:Src/main.c    ****   GPIOC-> PUPDR &= ~(1 < 17); // no pull-up down (00)
 413              		.loc 1 147 17 view .LVU123
 414 010e 9143     		bics	r1, r2
 415 0110 D960     		str	r1, [r3, #12]
 148:Src/main.c    **** 	
 416              		.loc 1 148 3 is_stmt 1 view .LVU124
 148:Src/main.c    **** 	
 417              		.loc 1 148 8 is_stmt 0 view .LVU125
 418 0112 D968     		ldr	r1, [r3, #12]
 148:Src/main.c    **** 	
 419              		.loc 1 148 17 view .LVU126
 420 0114 9143     		bics	r1, r2
 421 0116 D960     		str	r1, [r3, #12]
 151:Src/main.c    **** 	DAC1->CR |= (7 << 3); //SW Trigger Mode
 422              		.loc 1 151 3 is_stmt 1 view .LVU127
 151:Src/main.c    **** 	DAC1->CR |= (7 << 3); //SW Trigger Mode
 423              		.loc 1 151 12 is_stmt 0 view .LVU128
 424 0118 274B     		ldr	r3, .L18+12
 425 011a 0020     		movs	r0, #0
 426 011c 1860     		str	r0, [r3]
 152:Src/main.c    **** 	DAC1->SWTRIGR = 0;
 427              		.loc 1 152 2 is_stmt 1 view .LVU129
 152:Src/main.c    **** 	DAC1->SWTRIGR = 0;
 428              		.loc 1 152 6 is_stmt 0 view .LVU130
 429 011e 1968     		ldr	r1, [r3]
 152:Src/main.c    **** 	DAC1->SWTRIGR = 0;
 430              		.loc 1 152 11 view .LVU131
 431 0120 3824     		movs	r4, #56
 432 0122 2143     		orrs	r1, r4
 433 0124 1960     		str	r1, [r3]
 153:Src/main.c    **** 	DAC1->SWTRIGR |= (1 << 0); //SW Channel 1 Trigger
 434              		.loc 1 153 2 is_stmt 1 view .LVU132
 153:Src/main.c    **** 	DAC1->SWTRIGR |= (1 << 0); //SW Channel 1 Trigger
 435              		.loc 1 153 16 is_stmt 0 view .LVU133
 436 0126 5860     		str	r0, [r3, #4]
 154:Src/main.c    **** 
 437              		.loc 1 154 2 is_stmt 1 view .LVU134
 154:Src/main.c    **** 
 438              		.loc 1 154 6 is_stmt 0 view .LVU135
 439 0128 5968     		ldr	r1, [r3, #4]
 154:Src/main.c    **** 
 440              		.loc 1 154 16 view .LVU136
 441 012a 1143     		orrs	r1, r2
 442 012c 5960     		str	r1, [r3, #4]
 157:Src/main.c    **** 
 443              		.loc 1 157 3 is_stmt 1 view .LVU137
 157:Src/main.c    **** 
 444              		.loc 1 157 7 is_stmt 0 view .LVU138
 445 012e 1968     		ldr	r1, [r3]
 157:Src/main.c    **** 
 446              		.loc 1 157 12 view .LVU139
 447 0130 0A43     		orrs	r2, r1
 448 0132 1A60     		str	r2, [r3]
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 16


 160:Src/main.c    **** 	232,216,197,175,151,127,102,78,56,37,21,9,2,0,2,9,21,37,56,78,102};
 449              		.loc 1 160 2 is_stmt 1 view .LVU140
 160:Src/main.c    **** 	232,216,197,175,151,127,102,78,56,37,21,9,2,0,2,9,21,37,56,78,102};
 450              		.loc 1 160 16 is_stmt 0 view .LVU141
 451 0134 1BA8     		add	r0, sp, #108
 452 0136 214B     		ldr	r3, .L18+16
 453 0138 0200     		movs	r2, r0
 454 013a 1900     		movs	r1, r3
 455 013c 70C9     		ldmia	r1!, {r4, r5, r6}
 456 013e 70C2     		stmia	r2!, {r4, r5, r6}
 457 0140 31C9     		ldmia	r1!, {r0, r4, r5}
 458 0142 31C2     		stmia	r2!, {r0, r4, r5}
 459 0144 11C9     		ldmia	r1!, {r0, r4}
 460 0146 11C2     		stmia	r2!, {r0, r4}
 163:Src/main.c    **** 	190,206,222,238,254,238,222,206,190,174,158,142,127,111,95,79,63,47,31,15};
 461              		.loc 1 163 2 is_stmt 1 view .LVU142
 163:Src/main.c    **** 	190,206,222,238,254,238,222,206,190,174,158,142,127,111,95,79,63,47,31,15};
 462              		.loc 1 163 16 is_stmt 0 view .LVU143
 463 0148 13A8     		add	r0, sp, #76
 464 014a 1A00     		movs	r2, r3
 465 014c 2032     		adds	r2, r2, #32
 466 014e 0100     		movs	r1, r0
 467 0150 70CA     		ldmia	r2!, {r4, r5, r6}
 468 0152 70C1     		stmia	r1!, {r4, r5, r6}
 469 0154 31CA     		ldmia	r2!, {r0, r4, r5}
 470 0156 31C1     		stmia	r1!, {r0, r4, r5}
 471 0158 11CA     		ldmia	r2!, {r0, r4}
 472 015a 11C1     		stmia	r1!, {r0, r4}
 166:Src/main.c    **** 	111,119,127,134,142,150,158,166,174,182,190,198,206,214,222,230,238,246};
 473              		.loc 1 166 2 is_stmt 1 view .LVU144
 166:Src/main.c    **** 	111,119,127,134,142,150,158,166,174,182,190,198,206,214,222,230,238,246};
 474              		.loc 1 166 16 is_stmt 0 view .LVU145
 475 015c 0BA8     		add	r0, sp, #44
 476 015e 1A00     		movs	r2, r3
 477 0160 4032     		adds	r2, r2, #64
 478 0162 0100     		movs	r1, r0
 479 0164 70CA     		ldmia	r2!, {r4, r5, r6}
 480 0166 70C1     		stmia	r1!, {r4, r5, r6}
 481 0168 31CA     		ldmia	r2!, {r0, r4, r5}
 482 016a 31C1     		stmia	r1!, {r0, r4, r5}
 483 016c 11CA     		ldmia	r2!, {r0, r4}
 484 016e 11C1     		stmia	r1!, {r0, r4}
 169:Src/main.c    **** 	254,254,254,254,254,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 485              		.loc 1 169 2 is_stmt 1 view .LVU146
 169:Src/main.c    **** 	254,254,254,254,254,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 486              		.loc 1 169 16 is_stmt 0 view .LVU147
 487 0170 03A9     		add	r1, sp, #12
 488 0172 6033     		adds	r3, r3, #96
 489 0174 0A00     		movs	r2, r1
 490 0176 31CB     		ldmia	r3!, {r0, r4, r5}
 491 0178 31C2     		stmia	r2!, {r0, r4, r5}
 492 017a 13CB     		ldmia	r3!, {r0, r1, r4}
 493 017c 13C2     		stmia	r2!, {r0, r1, r4}
 494 017e 03CB     		ldmia	r3!, {r0, r1}
 495 0180 03C2     		stmia	r2!, {r0, r1}
 173:Src/main.c    ****   while (1) {		
 496              		.loc 1 173 3 is_stmt 1 view .LVU148
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 17


 497              	.LVL14:
 173:Src/main.c    ****   while (1) {		
 498              		.loc 1 173 3 is_stmt 0 view .LVU149
 499 0182 10E0     		b	.L15
 500              	.LVL15:
 501              	.L13:
 502              	.LBB5:
 182:Src/main.c    ****     }
 503              		.loc 1 182 5 is_stmt 1 view .LVU150
 504 0184 0120     		movs	r0, #1
 505 0186 FFF7FEFF 		bl	HAL_Delay
 506              	.LVL16:
 177:Src/main.c    **** 				DAC1->DHR8R1 = sine_table[i]; //Change for triange/saw
 507              		.loc 1 177 29 discriminator 2 view .LVU151
 508 018a 0134     		adds	r4, r4, #1
 509              	.LVL17:
 510              	.L12:
 177:Src/main.c    **** 				DAC1->DHR8R1 = sine_table[i]; //Change for triange/saw
 511              		.loc 1 177 22 discriminator 1 view .LVU152
 512 018c 1F2C     		cmp	r4, #31
 513 018e 07DC     		bgt	.L17
 178:Src/main.c    ****         if (i == 31){
 514              		.loc 1 178 5 view .LVU153
 178:Src/main.c    ****         if (i == 31){
 515              		.loc 1 178 30 is_stmt 0 view .LVU154
 516 0190 1BAB     		add	r3, sp, #108
 517 0192 1A5D     		ldrb	r2, [r3, r4]
 178:Src/main.c    ****         if (i == 31){
 518              		.loc 1 178 18 view .LVU155
 519 0194 084B     		ldr	r3, .L18+12
 520 0196 1A61     		str	r2, [r3, #16]
 179:Src/main.c    ****           i = 0;
 521              		.loc 1 179 9 is_stmt 1 view .LVU156
 179:Src/main.c    ****           i = 0;
 522              		.loc 1 179 12 is_stmt 0 view .LVU157
 523 0198 1F2C     		cmp	r4, #31
 524 019a F3D1     		bne	.L13
 180:Src/main.c    ****         }
 525              		.loc 1 180 13 view .LVU158
 526 019c 0024     		movs	r4, #0
 527              	.LVL18:
 180:Src/main.c    ****         }
 528              		.loc 1 180 13 view .LVU159
 529 019e F1E7     		b	.L13
 530              	.LVL19:
 531              	.L17:
 180:Src/main.c    ****         }
 532              		.loc 1 180 13 view .LVU160
 533              	.LBE5:
 207:Src/main.c    **** 	}
 534              		.loc 1 207 3 is_stmt 1 view .LVU161
 535 01a0 6420     		movs	r0, #100
 536 01a2 FFF7FEFF 		bl	HAL_Delay
 537              	.LVL20:
 174:Src/main.c    **** 
 538              		.loc 1 174 9 view .LVU162
 539              	.L15:
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 18


 174:Src/main.c    **** 
 540              		.loc 1 174 3 view .LVU163
 177:Src/main.c    **** 				DAC1->DHR8R1 = sine_table[i]; //Change for triange/saw
 541              		.loc 1 177 5 view .LVU164
 542              	.LBB6:
 177:Src/main.c    **** 				DAC1->DHR8R1 = sine_table[i]; //Change for triange/saw
 543              		.loc 1 177 9 view .LVU165
 177:Src/main.c    **** 				DAC1->DHR8R1 = sine_table[i]; //Change for triange/saw
 544              		.loc 1 177 13 is_stmt 0 view .LVU166
 545 01a6 0024     		movs	r4, #0
 177:Src/main.c    **** 				DAC1->DHR8R1 = sine_table[i]; //Change for triange/saw
 546              		.loc 1 177 5 view .LVU167
 547 01a8 F0E7     		b	.L12
 548              	.L19:
 549 01aa C046     		.align	2
 550              	.L18:
 551 01ac 00100240 		.word	1073876992
 552 01b0 00080048 		.word	1207961600
 553 01b4 00240140 		.word	1073816576
 554 01b8 00740040 		.word	1073771520
 555 01bc 00000000 		.word	.LANCHOR0
 556              	.LBE6:
 557              		.cfi_endproc
 558              	.LFE40:
 560              		.section	.rodata
 561              		.align	2
 562              		.set	.LANCHOR0,. + 0
 563              	.LC2:
 564 0000 7F97AFC5 		.ascii	"\177\227\257\305\330\350\364\373\376\373\364\350\330"
 564      D8E8F4FB 
 564      FEFBF4E8 
 564      D8
 565 000d C5AF977F 		.ascii	"\305\257\227\177fN8%\025\011\002\000\002\011\025%8N"
 565      664E3825 
 565      15090200 
 565      02091525 
 565      384E
 566 001f 66       		.ascii	"f"
 567              	.LC4:
 568 0020 000F1F2F 		.ascii	"\000\017\037/?O_o\177\216\236\256\276\316\336\356\376"
 568      3F4F5F6F 
 568      7F8E9EAE 
 568      BECEDEEE 
 568      FE
 569 0031 EEDECEBE 		.ascii	"\356\336\316\276\256\236\216\177o_O?/\037\017"
 569      AE9E8E7F 
 569      6F5F4F3F 
 569      2F1F0F
 570              	.LC5:
 571 0040 00070F17 		.ascii	"\000\007\017\027\037'/7?GOW_gow\177\206\216\226\236"
 571      1F272F37 
 571      3F474F57 
 571      5F676F77 
 571      7F868E96 
 572 0055 A6AEB6BE 		.ascii	"\246\256\266\276\306\316\326\336\346\356\366"
 572      C6CED6DE 
 572      E6EEF6
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 19


 573              	.LC6:
 574 0060 FEFEFEFE 		.ascii	"\376\376\376\376\376\376\376\376\376\376\376\376\376"
 574      FEFEFEFE 
 574      FEFEFEFE 
 574      FE
 575 006d FEFEFE00 		.ascii	"\376\376\376\000\000\000\000\000\000\000\000\000\000"
 575      00000000 
 575      00000000 
 575      00
 576 007a 00000000 		.ascii	"\000\000\000\000\000\000"
 576      0000
 577              		.text
 578              	.Letext0:
 579              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 580              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 581              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 582              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 583              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 584              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 585              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 586              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 587              		.file 10 "<built-in>"
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:19     .text._Error_Handler:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:162    .text.main:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:168    .text.main:00000000 main
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:551    .text.main:000001ac $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//cccKDQVb.s:561    .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
memset
HAL_GPIO_Init
HAL_Delay
