ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.USART3_IRQHandler,"ax",%progbits
  19              		.align	1
  20              		.global	USART3_IRQHandler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	USART3_IRQHandler:
  26              	.LFB41:
   1:Src/main.c    **** /**
   2:Src/main.c    ****  *
   3:Src/main.c    ****  * Brandon Mouser
   4:Src/main.c    ****  * U0962682
   5:Src/main.c    ****  *
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * File Name          : main.c
   8:Src/main.c    ****  * Description        : Main program body
   9:Src/main.c    ****  ******************************************************************************
  10:Src/main.c    ****  ** This notice applies to any and all portions of this file
  11:Src/main.c    ****  * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****  * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****  * inserted by the user or by software development tools
  14:Src/main.c    ****  * are owned by their respective copyright owners.
  15:Src/main.c    ****  *
  16:Src/main.c    ****  * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****  *
  18:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****  * are permitted provided that the following conditions are met:
  20:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****  *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****  *      and/or other materials provided with the distribution.
  25:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****  *      without specific prior written permission.
  28:Src/main.c    ****  *
  29:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 2


  33:Src/main.c    ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****  *
  40:Src/main.c    ****  ******************************************************************************
  41:Src/main.c    ****  */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** #include "stm32f072xb.h"
  47:Src/main.c    **** void _Error_Handler(char *file, int line);
  48:Src/main.c    **** volatile uint8_t receivedChar; // global variable holding the received characters
  49:Src/main.c    **** volatile int newData = 0;
  50:Src/main.c    **** volatile int count = 0; // count of characters (after 2 we will reset this variable)
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PV */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** void SystemClock_Config(void);
  65:Src/main.c    **** void transmitCharacter(char);
  66:Src/main.c    **** void transmitString(char *);
  67:Src/main.c    **** void USART3_IRQHandler(void);
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE BEGIN PFP */
  70:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PFP */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE BEGIN 0 */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /**
  79:Src/main.c    ****  * @brief  The application entry point.
  80:Src/main.c    ****  * @retval int
  81:Src/main.c    ****  */
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    ****   HAL_Init();           // Reset of all peripherals, init the Flash and Systick
  85:Src/main.c    ****   SystemClock_Config(); // Configure the system clock
  86:Src/main.c    **** 
  87:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE(); // Enable the GPIOC clock in the RCC
  88:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
  89:Src/main.c    ****   GPIO_InitTypeDef initStr = {GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 3


  90:Src/main.c    ****                               GPIO_MODE_OUTPUT_PP,
  91:Src/main.c    ****                               GPIO_SPEED_FREQ_LOW,
  92:Src/main.c    ****                               GPIO_NOPULL};
  93:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &initStr); // Initialize pins PC6,7,8 & PC9
  94:Src/main.c    ****                                   // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET); // Start P
  95:Src/main.c    **** 
  96:Src/main.c    ****   // **** Alternate Function **** //
  97:Src/main.c    ****   // Set the selected pins into alternate function mode and program the correct alternate function 
  98:Src/main.c    ****   // PC4 = USART3_TX (AF1) -- transmitting
  99:Src/main.c    ****   // PC5 = USART3_RX (AF1) -- receiving
 100:Src/main.c    ****   // Clear PC4/5 MODER4/5 and then set to alternate (10)
 101:Src/main.c    ****   GPIOC->MODER &= ~(1 << 8);  // clear PC4 bit
 102:Src/main.c    ****   GPIOC->MODER &= ~(1 << 9);  // clear PC4 bit
 103:Src/main.c    ****   GPIOC->MODER |= (1 << 9);   // set to alternate (10)
 104:Src/main.c    ****   GPIOC->MODER &= ~(1 << 10); // clear PC5 bit
 105:Src/main.c    ****   GPIOC->MODER &= ~(1 << 11); // clear PC5 bit
 106:Src/main.c    ****   GPIOC->MODER |= (1 << 11);  // set to alternate (10)
 107:Src/main.c    ****   // Assign AF1 to PC4 and PC5 -- 0001
 108:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 16);  // AFSEL4 bit 16
 109:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 17); // AFSEL4 bit 17 (clear)
 110:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 18); // AFSEL4 bit 18 (clear)
 111:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 19); // AFSEL4 bit 19 (clear)
 112:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 20);  // AFSEL5 bit 20
 113:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 21); // AFSEL5 bit 21 (clear)
 114:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 22); // AFSEL5 bit 22 (clear)
 115:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 23); // AFSEL5 bit 23 (clear)
 116:Src/main.c    **** 
 117:Src/main.c    ****   // **** Initialize the USART **** //
 118:Src/main.c    ****   // Enable the USART clock in the RCC
 119:Src/main.c    ****   RCC->APB1ENR = RCC_APB1ENR_USART3EN;
 120:Src/main.c    ****   // Set the Baud rate for communication to be 9600 bits/second.
 121:Src/main.c    ****   USART3->BRR = HAL_RCC_GetHCLKFreq() / 9600;
 122:Src/main.c    ****   // Enable transmitter and receiver hardware
 123:Src/main.c    ****   USART3->CR1 |= (1 << 3); // Enable transmitter
 124:Src/main.c    ****   USART3->CR1 |= (1 << 2); // Enable receiver
 125:Src/main.c    ****   USART3->CR1 |= (1 << 5); // Enable RXNE interrupt
 126:Src/main.c    ****   USART3->CR1 |= (1 << 0); // Enable USART
 127:Src/main.c    ****   // **** Initialize the USART **** //
 128:Src/main.c    **** 
 129:Src/main.c    ****   //*****Enable and Set Priority of the USART3 Interrupt*****************//
 130:Src/main.c    ****   // Enable the selected EXTI interrupt that references USART3
 131:Src/main.c    ****   NVIC_EnableIRQ(USART3_4_IRQn);
 132:Src/main.c    ****   // Set the priority for the interrupt to 0
 133:Src/main.c    ****   NVIC_SetPriority(USART3_4_IRQn, 0);
 134:Src/main.c    ****   // transmitString("CMD? \0");
 135:Src/main.c    **** 
 136:Src/main.c    ****   while (1)
 137:Src/main.c    ****   {
 138:Src/main.c    ****     while (!(USART3->ISR & USART_ISR_RXNE)){}
 139:Src/main.c    ****     // ******** 4.2 General Configuration ******** //
 140:Src/main.c    ****     if ((newData == 1))
 141:Src/main.c    ****     {
 142:Src/main.c    ****       uint16_t LED_case = 0; // LED to update
 143:Src/main.c    ****       switch (receivedChar)
 144:Src/main.c    ****       {
 145:Src/main.c    ****       case 'r':
 146:Src/main.c    ****         LED_case = GPIO_PIN_6;
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 4


 147:Src/main.c    ****         transmitCharacter('r');
 148:Src/main.c    ****         break;
 149:Src/main.c    ****       case 'b':
 150:Src/main.c    ****         LED_case = GPIO_PIN_7;
 151:Src/main.c    ****         transmitCharacter('b');
 152:Src/main.c    ****         break;
 153:Src/main.c    ****       case 'o':
 154:Src/main.c    ****         LED_case = GPIO_PIN_8;
 155:Src/main.c    ****         transmitCharacter('o');
 156:Src/main.c    ****         break;
 157:Src/main.c    ****       case 'g':
 158:Src/main.c    ****         LED_case = GPIO_PIN_9;
 159:Src/main.c    ****         transmitCharacter('g');
 160:Src/main.c    ****         break;
 161:Src/main.c    ****       case '0':
 162:Src/main.c    ****         HAL_GPIO_WritePin(GPIOC, LED_case, GPIO_PIN_RESET);
 163:Src/main.c    ****         transmitCharacter('0');
 164:Src/main.c    ****         break;
 165:Src/main.c    ****       case '1':
 166:Src/main.c    ****         HAL_GPIO_WritePin(GPIOC, LED_case, GPIO_PIN_SET);
 167:Src/main.c    ****         transmitCharacter('1');
 168:Src/main.c    ****         break;
 169:Src/main.c    ****       case '2':
 170:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOC, LED_case);
 171:Src/main.c    ****         transmitCharacter('2');
 172:Src/main.c    ****       default:
 173:Src/main.c    ****         transmitString("Error: Input needs to be 2 characters with correct criteria of r,b,o,g and 
 174:Src/main.c    ****         break;
 175:Src/main.c    ****       }
 176:Src/main.c    ****       newData = 0;
 177:Src/main.c    ****       count++;
 178:Src/main.c    ****       if (count >= 2)
 179:Src/main.c    ****         count = 0;
 180:Src/main.c    ****     }
 181:Src/main.c    **** 
 182:Src/main.c    **** 
 183:Src/main.c    ****     // ******** 4.2 General Configuration ******** //
 184:Src/main.c    ****     // uint8_t received_char = USART3->RDR;
 185:Src/main.c    ****     // switch (received_char)
 186:Src/main.c    ****     // {
 187:Src/main.c    ****     // case 'r':
 188:Src/main.c    ****     //   HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_6);
 189:Src/main.c    ****     //   transmitCharacter('r');
 190:Src/main.c    ****     //   break;
 191:Src/main.c    ****     // default:
 192:Src/main.c    ****     //   break;
 193:Src/main.c    ****     // }
 194:Src/main.c    ****     // transmitString(receivedChar);
 195:Src/main.c    **** 
 196:Src/main.c    **** 
 197:Src/main.c    **** 
 198:Src/main.c    **** 
 199:Src/main.c    ****   }
 200:Src/main.c    **** }
 201:Src/main.c    **** 
 202:Src/main.c    **** /**
 203:Src/main.c    ****  * USART3 Interrupt Handler
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 5


 204:Src/main.c    ****  */
 205:Src/main.c    **** void USART3_IRQHandler()
 206:Src/main.c    **** {
  27              		.loc 1 206 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 207:Src/main.c    ****   // receivedChar = (char)(USART3->RDR & 0xFF); // set global variable and mask it to only 2 charac
 208:Src/main.c    ****   receivedChar = USART3->RDR;
  32              		.loc 1 208 3 view .LVU1
  33              		.loc 1 208 24 is_stmt 0 view .LVU2
  34 0000 044B     		ldr	r3, .L2
  35 0002 9B8C     		ldrh	r3, [r3, #36]
  36              		.loc 1 208 16 view .LVU3
  37 0004 DBB2     		uxtb	r3, r3
  38 0006 044A     		ldr	r2, .L2+4
  39 0008 1370     		strb	r3, [r2]
 209:Src/main.c    ****   newData = 1;                  // Indicate new data is ready to be processed
  40              		.loc 1 209 3 is_stmt 1 view .LVU4
  41              		.loc 1 209 11 is_stmt 0 view .LVU5
  42 000a 044B     		ldr	r3, .L2+8
  43 000c 0122     		movs	r2, #1
  44 000e 1A60     		str	r2, [r3]
 210:Src/main.c    **** }
  45              		.loc 1 210 1 view .LVU6
  46              		@ sp needed
  47 0010 7047     		bx	lr
  48              	.L3:
  49 0012 C046     		.align	2
  50              	.L2:
  51 0014 00480040 		.word	1073760256
  52 0018 00000000 		.word	receivedChar
  53 001c 00000000 		.word	newData
  54              		.cfi_endproc
  55              	.LFE41:
  57              		.section	.text.transmitCharacter,"ax",%progbits
  58              		.align	1
  59              		.global	transmitCharacter
  60              		.syntax unified
  61              		.code	16
  62              		.thumb_func
  64              	transmitCharacter:
  65              	.LFB42:
 211:Src/main.c    **** 
 212:Src/main.c    **** /**
 213:Src/main.c    ****  *  Transmits a single character on the USART
 214:Src/main.c    ****  */
 215:Src/main.c    **** void transmitCharacter(char c)
 216:Src/main.c    **** {
  66              		.loc 1 216 1 is_stmt 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.LVL0:
  72              	.L5:
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 6


 217:Src/main.c    ****   // Check and wait on the USART status flag that indicates the transmit register is empty
 218:Src/main.c    ****   while (!(USART3->ISR & USART_ISR_TXE))
 219:Src/main.c    ****   {
 220:Src/main.c    ****   }
  73              		.loc 1 220 3 view .LVU8
 218:Src/main.c    ****   {
  74              		.loc 1 218 10 discriminator 1 view .LVU9
 218:Src/main.c    ****   {
  75              		.loc 1 218 18 is_stmt 0 discriminator 1 view .LVU10
  76 0000 034B     		ldr	r3, .L7
  77 0002 DB69     		ldr	r3, [r3, #28]
 218:Src/main.c    ****   {
  78              		.loc 1 218 10 discriminator 1 view .LVU11
  79 0004 1B06     		lsls	r3, r3, #24
  80 0006 FBD5     		bpl	.L5
 221:Src/main.c    ****   // Write the character into the transmit data register
 222:Src/main.c    ****   USART3->TDR = c;
  81              		.loc 1 222 3 is_stmt 1 view .LVU12
  82              		.loc 1 222 15 is_stmt 0 view .LVU13
  83 0008 014B     		ldr	r3, .L7
  84 000a 1885     		strh	r0, [r3, #40]
 223:Src/main.c    **** }
  85              		.loc 1 223 1 view .LVU14
  86              		@ sp needed
  87 000c 7047     		bx	lr
  88              	.L8:
  89 000e C046     		.align	2
  90              	.L7:
  91 0010 00480040 		.word	1073760256
  92              		.cfi_endproc
  93              	.LFE42:
  95              		.section	.text.transmitString,"ax",%progbits
  96              		.align	1
  97              		.global	transmitString
  98              		.syntax unified
  99              		.code	16
 100              		.thumb_func
 102              	transmitString:
 103              	.LVL1:
 104              	.LFB43:
 224:Src/main.c    **** 
 225:Src/main.c    **** /**
 226:Src/main.c    ****  *  Transmits a string on the USART
 227:Src/main.c    ****  */
 228:Src/main.c    **** void transmitString(char *s)
 229:Src/main.c    **** {
 105              		.loc 1 229 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 1 229 1 is_stmt 0 view .LVU16
 110 0000 70B5     		push	{r4, r5, r6, lr}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 16
 113              		.cfi_offset 4, -16
 114              		.cfi_offset 5, -12
 115              		.cfi_offset 6, -8
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 7


 116              		.cfi_offset 14, -4
 117 0002 0500     		movs	r5, r0
 230:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++)
 118              		.loc 1 230 3 is_stmt 1 view .LVU17
 119              	.LBB8:
 120              		.loc 1 230 8 view .LVU18
 121              	.LVL2:
 122              		.loc 1 230 12 is_stmt 0 view .LVU19
 123 0004 0024     		movs	r4, #0
 124              		.loc 1 230 3 view .LVU20
 125 0006 02E0     		b	.L10
 126              	.LVL3:
 127              	.L11:
 231:Src/main.c    ****   {
 232:Src/main.c    ****     transmitCharacter(s[i]);
 128              		.loc 1 232 5 is_stmt 1 view .LVU21
 129 0008 FFF7FEFF 		bl	transmitCharacter
 130              	.LVL4:
 230:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++)
 131              		.loc 1 230 34 discriminator 3 view .LVU22
 132 000c 0134     		adds	r4, r4, #1
 133              	.LVL5:
 134              	.L10:
 230:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++)
 135              		.loc 1 230 24 discriminator 1 view .LVU23
 230:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++)
 136              		.loc 1 230 20 is_stmt 0 discriminator 1 view .LVU24
 137 000e 285D     		ldrb	r0, [r5, r4]
 230:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++)
 138              		.loc 1 230 24 discriminator 1 view .LVU25
 139 0010 0028     		cmp	r0, #0
 140 0012 F9D1     		bne	.L11
 141              	.LBE8:
 233:Src/main.c    ****   }
 234:Src/main.c    **** }
 142              		.loc 1 234 1 view .LVU26
 143              		@ sp needed
 144              	.LVL6:
 145              	.LVL7:
 146              		.loc 1 234 1 view .LVU27
 147 0014 70BD     		pop	{r4, r5, r6, pc}
 148              		.cfi_endproc
 149              	.LFE43:
 151              		.section	.text._Error_Handler,"ax",%progbits
 152              		.align	1
 153              		.global	_Error_Handler
 154              		.syntax unified
 155              		.code	16
 156              		.thumb_func
 158              	_Error_Handler:
 159              	.LFB45:
 235:Src/main.c    **** 
 236:Src/main.c    **** /** System Clock Configuration
 237:Src/main.c    ****  */
 238:Src/main.c    **** void SystemClock_Config(void)
 239:Src/main.c    **** {
 240:Src/main.c    **** 
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 8


 241:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 242:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 243:Src/main.c    **** 
 244:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 245:Src/main.c    ****    */
 246:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 247:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 248:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 249:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 250:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 251:Src/main.c    ****   {
 252:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 253:Src/main.c    ****   }
 254:Src/main.c    **** 
 255:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 256:Src/main.c    ****    */
 257:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 258:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 259:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 260:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 261:Src/main.c    **** 
 262:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 263:Src/main.c    ****   {
 264:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 265:Src/main.c    ****   }
 266:Src/main.c    **** 
 267:Src/main.c    ****   /**Configure the Systick interrupt time
 268:Src/main.c    ****    */
 269:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 270:Src/main.c    **** 
 271:Src/main.c    ****   /**Configure the Systick
 272:Src/main.c    ****    */
 273:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 274:Src/main.c    **** 
 275:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 276:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 277:Src/main.c    **** }
 278:Src/main.c    **** 
 279:Src/main.c    **** /* USER CODE BEGIN 4 */
 280:Src/main.c    **** 
 281:Src/main.c    **** /* USER CODE END 4 */
 282:Src/main.c    **** 
 283:Src/main.c    **** /**
 284:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 285:Src/main.c    ****  * @param  None
 286:Src/main.c    ****  * @retval None
 287:Src/main.c    ****  */
 288:Src/main.c    **** void _Error_Handler(char *file, int line)
 289:Src/main.c    **** {
 160              		.loc 1 289 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ Volatile: function does not return.
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL8:
 167              	.L13:
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 9


 290:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 291:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 292:Src/main.c    ****   while (1)
 168              		.loc 1 292 3 view .LVU29
 293:Src/main.c    ****   {
 294:Src/main.c    ****   }
 169              		.loc 1 294 3 view .LVU30
 292:Src/main.c    ****   {
 170              		.loc 1 292 9 view .LVU31
 171 0000 FEE7     		b	.L13
 172              		.cfi_endproc
 173              	.LFE45:
 175              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 176              		.align	2
 177              	.LC2:
 178 0000 5372632F 		.ascii	"Src/main.c\000"
 178      6D61696E 
 178      2E6300
 179              		.global	__aeabi_uidiv
 180              		.section	.text.SystemClock_Config,"ax",%progbits
 181              		.align	1
 182              		.global	SystemClock_Config
 183              		.syntax unified
 184              		.code	16
 185              		.thumb_func
 187              	SystemClock_Config:
 188              	.LFB44:
 239:Src/main.c    **** 
 189              		.loc 1 239 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 72
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 00B5     		push	{lr}
 194              	.LCFI1:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 14, -4
 197 0002 93B0     		sub	sp, sp, #76
 198              	.LCFI2:
 199              		.cfi_def_cfa_offset 80
 241:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 200              		.loc 1 241 3 view .LVU33
 242:Src/main.c    **** 
 201              		.loc 1 242 3 view .LVU34
 246:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 202              		.loc 1 246 3 view .LVU35
 246:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 203              		.loc 1 246 36 is_stmt 0 view .LVU36
 204 0004 0223     		movs	r3, #2
 205 0006 0593     		str	r3, [sp, #20]
 247:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 206              		.loc 1 247 3 is_stmt 1 view .LVU37
 247:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 207              		.loc 1 247 30 is_stmt 0 view .LVU38
 208 0008 013B     		subs	r3, r3, #1
 209 000a 0893     		str	r3, [sp, #32]
 248:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 210              		.loc 1 248 3 is_stmt 1 view .LVU39
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 10


 248:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 211              		.loc 1 248 41 is_stmt 0 view .LVU40
 212 000c 0F33     		adds	r3, r3, #15
 213 000e 0993     		str	r3, [sp, #36]
 249:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 214              		.loc 1 249 3 is_stmt 1 view .LVU41
 249:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 215              		.loc 1 249 34 is_stmt 0 view .LVU42
 216 0010 0023     		movs	r3, #0
 217 0012 0E93     		str	r3, [sp, #56]
 250:Src/main.c    ****   {
 218              		.loc 1 250 3 is_stmt 1 view .LVU43
 250:Src/main.c    ****   {
 219              		.loc 1 250 7 is_stmt 0 view .LVU44
 220 0014 05A8     		add	r0, sp, #20
 221 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 222              	.LVL9:
 250:Src/main.c    ****   {
 223              		.loc 1 250 6 discriminator 1 view .LVU45
 224 001a 0028     		cmp	r0, #0
 225 001c 1ED1     		bne	.L17
 257:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 226              		.loc 1 257 3 is_stmt 1 view .LVU46
 257:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 227              		.loc 1 257 31 is_stmt 0 view .LVU47
 228 001e 0723     		movs	r3, #7
 229 0020 0193     		str	r3, [sp, #4]
 258:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 230              		.loc 1 258 3 is_stmt 1 view .LVU48
 258:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 231              		.loc 1 258 34 is_stmt 0 view .LVU49
 232 0022 0023     		movs	r3, #0
 233 0024 0293     		str	r3, [sp, #8]
 259:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 234              		.loc 1 259 3 is_stmt 1 view .LVU50
 259:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 235              		.loc 1 259 35 is_stmt 0 view .LVU51
 236 0026 0393     		str	r3, [sp, #12]
 260:Src/main.c    **** 
 237              		.loc 1 260 3 is_stmt 1 view .LVU52
 260:Src/main.c    **** 
 238              		.loc 1 260 36 is_stmt 0 view .LVU53
 239 0028 0493     		str	r3, [sp, #16]
 262:Src/main.c    ****   {
 240              		.loc 1 262 3 is_stmt 1 view .LVU54
 262:Src/main.c    ****   {
 241              		.loc 1 262 7 is_stmt 0 view .LVU55
 242 002a 0021     		movs	r1, #0
 243 002c 01A8     		add	r0, sp, #4
 244 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 245              	.LVL10:
 262:Src/main.c    ****   {
 246              		.loc 1 262 6 discriminator 1 view .LVU56
 247 0032 0028     		cmp	r0, #0
 248 0034 16D1     		bne	.L18
 269:Src/main.c    **** 
 249              		.loc 1 269 3 is_stmt 1 view .LVU57
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 11


 269:Src/main.c    **** 
 250              		.loc 1 269 22 is_stmt 0 view .LVU58
 251 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 252              	.LVL11:
 269:Src/main.c    **** 
 253              		.loc 1 269 3 discriminator 1 view .LVU59
 254 003a FA21     		movs	r1, #250
 255 003c 8900     		lsls	r1, r1, #2
 256 003e FFF7FEFF 		bl	__aeabi_uidiv
 257              	.LVL12:
 258 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 259              	.LVL13:
 273:Src/main.c    **** 
 260              		.loc 1 273 3 is_stmt 1 view .LVU60
 261 0046 0420     		movs	r0, #4
 262 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 263              	.LVL14:
 276:Src/main.c    **** }
 264              		.loc 1 276 3 view .LVU61
 265 004c 0120     		movs	r0, #1
 266 004e 0022     		movs	r2, #0
 267 0050 0021     		movs	r1, #0
 268 0052 4042     		rsbs	r0, r0, #0
 269 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 270              	.LVL15:
 277:Src/main.c    **** 
 271              		.loc 1 277 1 is_stmt 0 view .LVU62
 272 0058 13B0     		add	sp, sp, #76
 273              		@ sp needed
 274 005a 00BD     		pop	{pc}
 275              	.L17:
 252:Src/main.c    ****   }
 276              		.loc 1 252 5 is_stmt 1 view .LVU63
 277 005c 0448     		ldr	r0, .L19
 278 005e FC21     		movs	r1, #252
 279 0060 FFF7FEFF 		bl	_Error_Handler
 280              	.LVL16:
 281              	.L18:
 264:Src/main.c    ****   }
 282              		.loc 1 264 5 view .LVU64
 283 0064 8421     		movs	r1, #132
 284 0066 0248     		ldr	r0, .L19
 285 0068 4900     		lsls	r1, r1, #1
 286 006a FFF7FEFF 		bl	_Error_Handler
 287              	.LVL17:
 288              	.L20:
 289 006e C046     		.align	2
 290              	.L19:
 291 0070 00000000 		.word	.LC2
 292              		.cfi_endproc
 293              	.LFE44:
 295              		.section	.text.main,"ax",%progbits
 296              		.align	1
 297              		.global	main
 298              		.syntax unified
 299              		.code	16
 300              		.thumb_func
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 12


 302              	main:
 303              	.LFB40:
  83:Src/main.c    ****   HAL_Init();           // Reset of all peripherals, init the Flash and Systick
 304              		.loc 1 83 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 24
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 70B5     		push	{r4, r5, r6, lr}
 309              	.LCFI3:
 310              		.cfi_def_cfa_offset 16
 311              		.cfi_offset 4, -16
 312              		.cfi_offset 5, -12
 313              		.cfi_offset 6, -8
 314              		.cfi_offset 14, -4
 315 0002 86B0     		sub	sp, sp, #24
 316              	.LCFI4:
 317              		.cfi_def_cfa_offset 40
  84:Src/main.c    ****   SystemClock_Config(); // Configure the system clock
 318              		.loc 1 84 3 view .LVU66
 319 0004 FFF7FEFF 		bl	HAL_Init
 320              	.LVL18:
  85:Src/main.c    **** 
 321              		.loc 1 85 3 view .LVU67
 322 0008 FFF7FEFF 		bl	SystemClock_Config
 323              	.LVL19:
  87:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
 324              		.loc 1 87 3 view .LVU68
 325              	.LBB9:
  87:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
 326              		.loc 1 87 3 view .LVU69
  87:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
 327              		.loc 1 87 3 view .LVU70
 328 000c 664D     		ldr	r5, .L37
 329 000e 6B69     		ldr	r3, [r5, #20]
 330 0010 8022     		movs	r2, #128
 331 0012 1203     		lsls	r2, r2, #12
 332 0014 1343     		orrs	r3, r2
 333 0016 6B61     		str	r3, [r5, #20]
  87:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
 334              		.loc 1 87 3 view .LVU71
 335 0018 6B69     		ldr	r3, [r5, #20]
 336 001a 1340     		ands	r3, r2
 337 001c 0093     		str	r3, [sp]
  87:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
 338              		.loc 1 87 3 view .LVU72
 339 001e 009B     		ldr	r3, [sp]
 340              	.LBE9:
  87:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
 341              		.loc 1 87 3 view .LVU73
  89:Src/main.c    ****                               GPIO_MODE_OUTPUT_PP,
 342              		.loc 1 89 3 view .LVU74
  89:Src/main.c    ****                               GPIO_MODE_OUTPUT_PP,
 343              		.loc 1 89 20 is_stmt 0 view .LVU75
 344 0020 1422     		movs	r2, #20
 345 0022 0021     		movs	r1, #0
 346 0024 01A8     		add	r0, sp, #4
 347 0026 FFF7FEFF 		bl	memset
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 13


 348              	.LVL20:
 349 002a FC23     		movs	r3, #252
 350 002c 9B00     		lsls	r3, r3, #2
 351 002e 0193     		str	r3, [sp, #4]
 352 0030 0126     		movs	r6, #1
 353 0032 0296     		str	r6, [sp, #8]
  93:Src/main.c    ****                                   // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET); // Start P
 354              		.loc 1 93 3 is_stmt 1 view .LVU76
 355 0034 5D4C     		ldr	r4, .L37+4
 356 0036 01A9     		add	r1, sp, #4
 357 0038 2000     		movs	r0, r4
 358 003a FFF7FEFF 		bl	HAL_GPIO_Init
 359              	.LVL21:
 101:Src/main.c    ****   GPIOC->MODER &= ~(1 << 9);  // clear PC4 bit
 360              		.loc 1 101 3 view .LVU77
 101:Src/main.c    ****   GPIOC->MODER &= ~(1 << 9);  // clear PC4 bit
 361              		.loc 1 101 8 is_stmt 0 view .LVU78
 362 003e 2368     		ldr	r3, [r4]
 101:Src/main.c    ****   GPIOC->MODER &= ~(1 << 9);  // clear PC4 bit
 363              		.loc 1 101 16 view .LVU79
 364 0040 5B4A     		ldr	r2, .L37+8
 365 0042 1340     		ands	r3, r2
 366 0044 2360     		str	r3, [r4]
 102:Src/main.c    ****   GPIOC->MODER |= (1 << 9);   // set to alternate (10)
 367              		.loc 1 102 3 is_stmt 1 view .LVU80
 102:Src/main.c    ****   GPIOC->MODER |= (1 << 9);   // set to alternate (10)
 368              		.loc 1 102 8 is_stmt 0 view .LVU81
 369 0046 2368     		ldr	r3, [r4]
 102:Src/main.c    ****   GPIOC->MODER |= (1 << 9);   // set to alternate (10)
 370              		.loc 1 102 16 view .LVU82
 371 0048 5A4A     		ldr	r2, .L37+12
 372 004a 1340     		ands	r3, r2
 373 004c 2360     		str	r3, [r4]
 103:Src/main.c    ****   GPIOC->MODER &= ~(1 << 10); // clear PC5 bit
 374              		.loc 1 103 3 is_stmt 1 view .LVU83
 103:Src/main.c    ****   GPIOC->MODER &= ~(1 << 10); // clear PC5 bit
 375              		.loc 1 103 8 is_stmt 0 view .LVU84
 376 004e 2268     		ldr	r2, [r4]
 103:Src/main.c    ****   GPIOC->MODER &= ~(1 << 10); // clear PC5 bit
 377              		.loc 1 103 16 view .LVU85
 378 0050 8023     		movs	r3, #128
 379 0052 9B00     		lsls	r3, r3, #2
 380 0054 1343     		orrs	r3, r2
 381 0056 2360     		str	r3, [r4]
 104:Src/main.c    ****   GPIOC->MODER &= ~(1 << 11); // clear PC5 bit
 382              		.loc 1 104 3 is_stmt 1 view .LVU86
 104:Src/main.c    ****   GPIOC->MODER &= ~(1 << 11); // clear PC5 bit
 383              		.loc 1 104 8 is_stmt 0 view .LVU87
 384 0058 2368     		ldr	r3, [r4]
 104:Src/main.c    ****   GPIOC->MODER &= ~(1 << 11); // clear PC5 bit
 385              		.loc 1 104 16 view .LVU88
 386 005a 574A     		ldr	r2, .L37+16
 387 005c 1340     		ands	r3, r2
 388 005e 2360     		str	r3, [r4]
 105:Src/main.c    ****   GPIOC->MODER |= (1 << 11);  // set to alternate (10)
 389              		.loc 1 105 3 is_stmt 1 view .LVU89
 105:Src/main.c    ****   GPIOC->MODER |= (1 << 11);  // set to alternate (10)
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 14


 390              		.loc 1 105 8 is_stmt 0 view .LVU90
 391 0060 2368     		ldr	r3, [r4]
 105:Src/main.c    ****   GPIOC->MODER |= (1 << 11);  // set to alternate (10)
 392              		.loc 1 105 16 view .LVU91
 393 0062 564A     		ldr	r2, .L37+20
 394 0064 1340     		ands	r3, r2
 395 0066 2360     		str	r3, [r4]
 106:Src/main.c    ****   // Assign AF1 to PC4 and PC5 -- 0001
 396              		.loc 1 106 3 is_stmt 1 view .LVU92
 106:Src/main.c    ****   // Assign AF1 to PC4 and PC5 -- 0001
 397              		.loc 1 106 8 is_stmt 0 view .LVU93
 398 0068 2268     		ldr	r2, [r4]
 106:Src/main.c    ****   // Assign AF1 to PC4 and PC5 -- 0001
 399              		.loc 1 106 16 view .LVU94
 400 006a 8023     		movs	r3, #128
 401 006c 1B01     		lsls	r3, r3, #4
 402 006e 1343     		orrs	r3, r2
 403 0070 2360     		str	r3, [r4]
 108:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 17); // AFSEL4 bit 17 (clear)
 404              		.loc 1 108 3 is_stmt 1 view .LVU95
 108:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 17); // AFSEL4 bit 17 (clear)
 405              		.loc 1 108 13 is_stmt 0 view .LVU96
 406 0072 226A     		ldr	r2, [r4, #32]
 108:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 17); // AFSEL4 bit 17 (clear)
 407              		.loc 1 108 17 view .LVU97
 408 0074 8023     		movs	r3, #128
 409 0076 5B02     		lsls	r3, r3, #9
 410 0078 1343     		orrs	r3, r2
 411 007a 2362     		str	r3, [r4, #32]
 109:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 18); // AFSEL4 bit 18 (clear)
 412              		.loc 1 109 3 is_stmt 1 view .LVU98
 109:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 18); // AFSEL4 bit 18 (clear)
 413              		.loc 1 109 13 is_stmt 0 view .LVU99
 414 007c 236A     		ldr	r3, [r4, #32]
 109:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 18); // AFSEL4 bit 18 (clear)
 415              		.loc 1 109 17 view .LVU100
 416 007e 504A     		ldr	r2, .L37+24
 417 0080 1340     		ands	r3, r2
 418 0082 2362     		str	r3, [r4, #32]
 110:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 19); // AFSEL4 bit 19 (clear)
 419              		.loc 1 110 3 is_stmt 1 view .LVU101
 110:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 19); // AFSEL4 bit 19 (clear)
 420              		.loc 1 110 13 is_stmt 0 view .LVU102
 421 0084 236A     		ldr	r3, [r4, #32]
 110:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 19); // AFSEL4 bit 19 (clear)
 422              		.loc 1 110 17 view .LVU103
 423 0086 4F4A     		ldr	r2, .L37+28
 424 0088 1340     		ands	r3, r2
 425 008a 2362     		str	r3, [r4, #32]
 111:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 20);  // AFSEL5 bit 20
 426              		.loc 1 111 3 is_stmt 1 view .LVU104
 111:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 20);  // AFSEL5 bit 20
 427              		.loc 1 111 13 is_stmt 0 view .LVU105
 428 008c 236A     		ldr	r3, [r4, #32]
 111:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 20);  // AFSEL5 bit 20
 429              		.loc 1 111 17 view .LVU106
 430 008e 4E4A     		ldr	r2, .L37+32
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 15


 431 0090 1340     		ands	r3, r2
 432 0092 2362     		str	r3, [r4, #32]
 112:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 21); // AFSEL5 bit 21 (clear)
 433              		.loc 1 112 3 is_stmt 1 view .LVU107
 112:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 21); // AFSEL5 bit 21 (clear)
 434              		.loc 1 112 13 is_stmt 0 view .LVU108
 435 0094 226A     		ldr	r2, [r4, #32]
 112:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 21); // AFSEL5 bit 21 (clear)
 436              		.loc 1 112 17 view .LVU109
 437 0096 8023     		movs	r3, #128
 438 0098 5B03     		lsls	r3, r3, #13
 439 009a 1343     		orrs	r3, r2
 440 009c 2362     		str	r3, [r4, #32]
 113:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 22); // AFSEL5 bit 22 (clear)
 441              		.loc 1 113 3 is_stmt 1 view .LVU110
 113:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 22); // AFSEL5 bit 22 (clear)
 442              		.loc 1 113 13 is_stmt 0 view .LVU111
 443 009e 236A     		ldr	r3, [r4, #32]
 113:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 22); // AFSEL5 bit 22 (clear)
 444              		.loc 1 113 17 view .LVU112
 445 00a0 4A4A     		ldr	r2, .L37+36
 446 00a2 1340     		ands	r3, r2
 447 00a4 2362     		str	r3, [r4, #32]
 114:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 23); // AFSEL5 bit 23 (clear)
 448              		.loc 1 114 3 is_stmt 1 view .LVU113
 114:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 23); // AFSEL5 bit 23 (clear)
 449              		.loc 1 114 13 is_stmt 0 view .LVU114
 450 00a6 236A     		ldr	r3, [r4, #32]
 114:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 23); // AFSEL5 bit 23 (clear)
 451              		.loc 1 114 17 view .LVU115
 452 00a8 494A     		ldr	r2, .L37+40
 453 00aa 1340     		ands	r3, r2
 454 00ac 2362     		str	r3, [r4, #32]
 115:Src/main.c    **** 
 455              		.loc 1 115 3 is_stmt 1 view .LVU116
 115:Src/main.c    **** 
 456              		.loc 1 115 13 is_stmt 0 view .LVU117
 457 00ae 236A     		ldr	r3, [r4, #32]
 115:Src/main.c    **** 
 458              		.loc 1 115 17 view .LVU118
 459 00b0 484A     		ldr	r2, .L37+44
 460 00b2 1340     		ands	r3, r2
 461 00b4 2362     		str	r3, [r4, #32]
 119:Src/main.c    ****   // Set the Baud rate for communication to be 9600 bits/second.
 462              		.loc 1 119 3 is_stmt 1 view .LVU119
 119:Src/main.c    ****   // Set the Baud rate for communication to be 9600 bits/second.
 463              		.loc 1 119 16 is_stmt 0 view .LVU120
 464 00b6 8023     		movs	r3, #128
 465 00b8 DB02     		lsls	r3, r3, #11
 466 00ba EB61     		str	r3, [r5, #28]
 121:Src/main.c    ****   // Enable transmitter and receiver hardware
 467              		.loc 1 121 3 is_stmt 1 view .LVU121
 121:Src/main.c    ****   // Enable transmitter and receiver hardware
 468              		.loc 1 121 17 is_stmt 0 view .LVU122
 469 00bc FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 470              	.LVL22:
 121:Src/main.c    ****   // Enable transmitter and receiver hardware
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 16


 471              		.loc 1 121 39 discriminator 1 view .LVU123
 472 00c0 9621     		movs	r1, #150
 473 00c2 8901     		lsls	r1, r1, #6
 474 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 475              	.LVL23:
 121:Src/main.c    ****   // Enable transmitter and receiver hardware
 476              		.loc 1 121 15 discriminator 1 view .LVU124
 477 00c8 434B     		ldr	r3, .L37+48
 478 00ca D860     		str	r0, [r3, #12]
 123:Src/main.c    ****   USART3->CR1 |= (1 << 2); // Enable receiver
 479              		.loc 1 123 3 is_stmt 1 view .LVU125
 123:Src/main.c    ****   USART3->CR1 |= (1 << 2); // Enable receiver
 480              		.loc 1 123 9 is_stmt 0 view .LVU126
 481 00cc 1A68     		ldr	r2, [r3]
 123:Src/main.c    ****   USART3->CR1 |= (1 << 2); // Enable receiver
 482              		.loc 1 123 15 view .LVU127
 483 00ce 0821     		movs	r1, #8
 484 00d0 0A43     		orrs	r2, r1
 485 00d2 1A60     		str	r2, [r3]
 124:Src/main.c    ****   USART3->CR1 |= (1 << 5); // Enable RXNE interrupt
 486              		.loc 1 124 3 is_stmt 1 view .LVU128
 124:Src/main.c    ****   USART3->CR1 |= (1 << 5); // Enable RXNE interrupt
 487              		.loc 1 124 9 is_stmt 0 view .LVU129
 488 00d4 1A68     		ldr	r2, [r3]
 124:Src/main.c    ****   USART3->CR1 |= (1 << 5); // Enable RXNE interrupt
 489              		.loc 1 124 15 view .LVU130
 490 00d6 0439     		subs	r1, r1, #4
 491 00d8 0A43     		orrs	r2, r1
 492 00da 1A60     		str	r2, [r3]
 125:Src/main.c    ****   USART3->CR1 |= (1 << 0); // Enable USART
 493              		.loc 1 125 3 is_stmt 1 view .LVU131
 125:Src/main.c    ****   USART3->CR1 |= (1 << 0); // Enable USART
 494              		.loc 1 125 9 is_stmt 0 view .LVU132
 495 00dc 1A68     		ldr	r2, [r3]
 125:Src/main.c    ****   USART3->CR1 |= (1 << 0); // Enable USART
 496              		.loc 1 125 15 view .LVU133
 497 00de 1C31     		adds	r1, r1, #28
 498 00e0 0A43     		orrs	r2, r1
 499 00e2 1A60     		str	r2, [r3]
 126:Src/main.c    ****   // **** Initialize the USART **** //
 500              		.loc 1 126 3 is_stmt 1 view .LVU134
 126:Src/main.c    ****   // **** Initialize the USART **** //
 501              		.loc 1 126 9 is_stmt 0 view .LVU135
 502 00e4 1A68     		ldr	r2, [r3]
 126:Src/main.c    ****   // **** Initialize the USART **** //
 503              		.loc 1 126 15 view .LVU136
 504 00e6 3243     		orrs	r2, r6
 505 00e8 1A60     		str	r2, [r3]
 131:Src/main.c    ****   // Set the priority for the interrupt to 0
 506              		.loc 1 131 3 is_stmt 1 view .LVU137
 507              	.LVL24:
 508              	.LBB10:
 509              	.LBI10:
 510              		.file 2 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 17


   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V5.0.5
   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /*
   8:Drivers/CMSIS/Include/core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0.h ****  *
  10:Drivers/CMSIS/Include/core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0.h ****  *
  12:Drivers/CMSIS/Include/core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm0.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0.h ****  *
  16:Drivers/CMSIS/Include/core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm0.h ****  *
  18:Drivers/CMSIS/Include/core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0.h ****  */
  24:Drivers/CMSIS/Include/core_cm0.h **** 
  25:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0.h **** 
  31:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0.h **** 
  36:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0.h **** #endif
  39:Drivers/CMSIS/Include/core_cm0.h **** 
  40:Drivers/CMSIS/Include/core_cm0.h **** /**
  41:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0.h **** 
  47:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0.h ****  */
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h **** 
  55:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0.h **** /**
  59:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  60:Drivers/CMSIS/Include/core_cm0.h ****   @{
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 18


  61:Drivers/CMSIS/Include/core_cm0.h ****  */
  62:Drivers/CMSIS/Include/core_cm0.h **** 
  63:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0.h ****  
  65:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  66:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm0.h **** 
  71:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0.h **** */
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0.h **** 
  78:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0.h **** 
  83:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0.h **** 
  88:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0.h **** 
  93:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0.h **** 
  98:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0.h **** 
 103:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0.h **** 
 108:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0.h **** 
 113:Drivers/CMSIS/Include/core_cm0.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0.h **** 
 115:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 19


 118:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm0.h **** }
 120:Drivers/CMSIS/Include/core_cm0.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0.h **** 
 122:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0.h **** 
 124:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm0.h **** 
 129:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm0.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0.h **** 
 133:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 136:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 137:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0.h **** 
 140:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0.h **** 
 145:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0.h **** #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:Drivers/CMSIS/Include/core_cm0.h **** /**
 153:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:Drivers/CMSIS/Include/core_cm0.h **** 
 155:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 157:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:Drivers/CMSIS/Include/core_cm0.h **** */
 159:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 160:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:Drivers/CMSIS/Include/core_cm0.h **** #else
 162:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:Drivers/CMSIS/Include/core_cm0.h **** #endif
 164:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:Drivers/CMSIS/Include/core_cm0.h **** 
 167:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 168:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 20


 175:Drivers/CMSIS/Include/core_cm0.h **** 
 176:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 177:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 178:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 179:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 180:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 181:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 182:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 183:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 184:Drivers/CMSIS/Include/core_cm0.h **** /**
 185:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:Drivers/CMSIS/Include/core_cm0.h **** */
 188:Drivers/CMSIS/Include/core_cm0.h **** 
 189:Drivers/CMSIS/Include/core_cm0.h **** /**
 190:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 191:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 193:Drivers/CMSIS/Include/core_cm0.h ****   @{
 194:Drivers/CMSIS/Include/core_cm0.h ****  */
 195:Drivers/CMSIS/Include/core_cm0.h **** 
 196:Drivers/CMSIS/Include/core_cm0.h **** /**
 197:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:Drivers/CMSIS/Include/core_cm0.h ****  */
 199:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 200:Drivers/CMSIS/Include/core_cm0.h **** {
 201:Drivers/CMSIS/Include/core_cm0.h ****   struct
 202:Drivers/CMSIS/Include/core_cm0.h ****   {
 203:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 211:Drivers/CMSIS/Include/core_cm0.h **** 
 212:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:Drivers/CMSIS/Include/core_cm0.h **** 
 216:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:Drivers/CMSIS/Include/core_cm0.h **** 
 219:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:Drivers/CMSIS/Include/core_cm0.h **** 
 225:Drivers/CMSIS/Include/core_cm0.h **** 
 226:Drivers/CMSIS/Include/core_cm0.h **** /**
 227:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:Drivers/CMSIS/Include/core_cm0.h ****  */
 229:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 230:Drivers/CMSIS/Include/core_cm0.h **** {
 231:Drivers/CMSIS/Include/core_cm0.h ****   struct
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 21


 232:Drivers/CMSIS/Include/core_cm0.h ****   {
 233:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 238:Drivers/CMSIS/Include/core_cm0.h **** 
 239:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 240:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:Drivers/CMSIS/Include/core_cm0.h **** 
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 262:Drivers/CMSIS/Include/core_cm0.h **** 
 263:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 264:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:Drivers/CMSIS/Include/core_cm0.h **** 
 276:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:Drivers/CMSIS/Include/core_cm0.h **** 
 279:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:Drivers/CMSIS/Include/core_cm0.h **** 
 282:Drivers/CMSIS/Include/core_cm0.h **** 
 283:Drivers/CMSIS/Include/core_cm0.h **** /**
 284:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:Drivers/CMSIS/Include/core_cm0.h ****  */
 286:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 287:Drivers/CMSIS/Include/core_cm0.h **** {
 288:Drivers/CMSIS/Include/core_cm0.h ****   struct
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 22


 289:Drivers/CMSIS/Include/core_cm0.h ****   {
 290:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 296:Drivers/CMSIS/Include/core_cm0.h **** 
 297:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 298:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:Drivers/CMSIS/Include/core_cm0.h **** 
 301:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:Drivers/CMSIS/Include/core_cm0.h **** 
 303:Drivers/CMSIS/Include/core_cm0.h **** 
 304:Drivers/CMSIS/Include/core_cm0.h **** /**
 305:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 306:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:Drivers/CMSIS/Include/core_cm0.h ****   @{
 309:Drivers/CMSIS/Include/core_cm0.h ****  */
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /**
 312:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:Drivers/CMSIS/Include/core_cm0.h ****  */
 314:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 315:Drivers/CMSIS/Include/core_cm0.h **** {
 316:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 318:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 320:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 322:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 324:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 325:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 327:Drivers/CMSIS/Include/core_cm0.h **** 
 328:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 333:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:Drivers/CMSIS/Include/core_cm0.h ****   @{
 336:Drivers/CMSIS/Include/core_cm0.h ****  */
 337:Drivers/CMSIS/Include/core_cm0.h **** 
 338:Drivers/CMSIS/Include/core_cm0.h **** /**
 339:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:Drivers/CMSIS/Include/core_cm0.h ****  */
 341:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 342:Drivers/CMSIS/Include/core_cm0.h **** {
 343:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 23


 346:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 350:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 353:Drivers/CMSIS/Include/core_cm0.h **** 
 354:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 355:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:Drivers/CMSIS/Include/core_cm0.h **** 
 358:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:Drivers/CMSIS/Include/core_cm0.h **** 
 361:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:Drivers/CMSIS/Include/core_cm0.h **** 
 364:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:Drivers/CMSIS/Include/core_cm0.h **** 
 367:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:Drivers/CMSIS/Include/core_cm0.h **** 
 370:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:Drivers/CMSIS/Include/core_cm0.h **** 
 374:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:Drivers/CMSIS/Include/core_cm0.h **** 
 377:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:Drivers/CMSIS/Include/core_cm0.h **** 
 380:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:Drivers/CMSIS/Include/core_cm0.h **** 
 383:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:Drivers/CMSIS/Include/core_cm0.h **** 
 389:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0.h **** 
 392:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0.h **** 
 395:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0.h **** 
 398:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 24


 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm0.h **** 
 405:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** 
 408:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** 
 411:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** 
 414:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** 
 421:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** 
 424:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0.h **** 
 435:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** 
 438:Drivers/CMSIS/Include/core_cm0.h **** /**
 439:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:Drivers/CMSIS/Include/core_cm0.h ****   @{
 443:Drivers/CMSIS/Include/core_cm0.h ****  */
 444:Drivers/CMSIS/Include/core_cm0.h **** 
 445:Drivers/CMSIS/Include/core_cm0.h **** /**
 446:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:Drivers/CMSIS/Include/core_cm0.h ****  */
 448:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm0.h **** {
 450:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 25


 460:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:Drivers/CMSIS/Include/core_cm0.h **** 
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:Drivers/CMSIS/Include/core_cm0.h **** 
 473:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:Drivers/CMSIS/Include/core_cm0.h **** 
 477:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:Drivers/CMSIS/Include/core_cm0.h **** 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0.h **** 
 484:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0.h **** 
 487:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:Drivers/CMSIS/Include/core_cm0.h **** 
 489:Drivers/CMSIS/Include/core_cm0.h **** 
 490:Drivers/CMSIS/Include/core_cm0.h **** /**
 491:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 492:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:Drivers/CMSIS/Include/core_cm0.h ****   @{
 496:Drivers/CMSIS/Include/core_cm0.h ****  */
 497:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:Drivers/CMSIS/Include/core_cm0.h **** 
 499:Drivers/CMSIS/Include/core_cm0.h **** 
 500:Drivers/CMSIS/Include/core_cm0.h **** /**
 501:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 502:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:Drivers/CMSIS/Include/core_cm0.h ****   @{
 505:Drivers/CMSIS/Include/core_cm0.h ****  */
 506:Drivers/CMSIS/Include/core_cm0.h **** 
 507:Drivers/CMSIS/Include/core_cm0.h **** /**
 508:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 512:Drivers/CMSIS/Include/core_cm0.h **** */
 513:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:Drivers/CMSIS/Include/core_cm0.h **** 
 515:Drivers/CMSIS/Include/core_cm0.h **** /**
 516:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 26


 517:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 520:Drivers/CMSIS/Include/core_cm0.h **** */
 521:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:Drivers/CMSIS/Include/core_cm0.h **** 
 523:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** 
 526:Drivers/CMSIS/Include/core_cm0.h **** /**
 527:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 528:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:Drivers/CMSIS/Include/core_cm0.h ****   @{
 531:Drivers/CMSIS/Include/core_cm0.h ****  */
 532:Drivers/CMSIS/Include/core_cm0.h **** 
 533:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Core Hardware */
 534:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:Drivers/CMSIS/Include/core_cm0.h **** 
 539:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:Drivers/CMSIS/Include/core_cm0.h **** 
 543:Drivers/CMSIS/Include/core_cm0.h **** 
 544:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 545:Drivers/CMSIS/Include/core_cm0.h **** 
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 549:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 550:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 551:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 552:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 553:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 554:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:Drivers/CMSIS/Include/core_cm0.h **** */
 558:Drivers/CMSIS/Include/core_cm0.h **** 
 559:Drivers/CMSIS/Include/core_cm0.h **** 
 560:Drivers/CMSIS/Include/core_cm0.h **** 
 561:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:Drivers/CMSIS/Include/core_cm0.h **** /**
 563:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:Drivers/CMSIS/Include/core_cm0.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0.h ****  */
 568:Drivers/CMSIS/Include/core_cm0.h **** 
 569:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 573:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 27


 574:Drivers/CMSIS/Include/core_cm0.h **** #else
 575:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:Drivers/CMSIS/Include/core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:Drivers/CMSIS/Include/core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:Drivers/CMSIS/Include/core_cm0.h **** 
 589:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 593:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:Drivers/CMSIS/Include/core_cm0.h **** #else
 595:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:Drivers/CMSIS/Include/core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:Drivers/CMSIS/Include/core_cm0.h **** 
 599:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:Drivers/CMSIS/Include/core_cm0.h **** 
 601:Drivers/CMSIS/Include/core_cm0.h **** 
 602:Drivers/CMSIS/Include/core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:Drivers/CMSIS/Include/core_cm0.h **** 
 614:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /**
 618:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable Interrupt
 619:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 622:Drivers/CMSIS/Include/core_cm0.h ****  */
 623:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 511              		.loc 2 623 22 view .LVU138
 512              	.LBB11:
 624:Drivers/CMSIS/Include/core_cm0.h **** {
 625:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 513              		.loc 2 625 3 view .LVU139
 626:Drivers/CMSIS/Include/core_cm0.h ****   {
 627:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 28


 514              		.loc 2 627 5 view .LVU140
 515              		.loc 2 627 20 is_stmt 0 view .LVU141
 516 00ea 3C4B     		ldr	r3, .L37+52
 517 00ec 8022     		movs	r2, #128
 518 00ee 9205     		lsls	r2, r2, #22
 519 00f0 1A60     		str	r2, [r3]
 520              	.LVL25:
 521              		.loc 2 627 20 view .LVU142
 522              	.LBE11:
 523              	.LBE10:
 133:Src/main.c    ****   // transmitString("CMD? \0");
 524              		.loc 1 133 3 is_stmt 1 view .LVU143
 525              	.LBB12:
 526              	.LBI12:
 628:Drivers/CMSIS/Include/core_cm0.h ****   }
 629:Drivers/CMSIS/Include/core_cm0.h **** }
 630:Drivers/CMSIS/Include/core_cm0.h **** 
 631:Drivers/CMSIS/Include/core_cm0.h **** 
 632:Drivers/CMSIS/Include/core_cm0.h **** /**
 633:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Interrupt Enable status
 634:Drivers/CMSIS/Include/core_cm0.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 635:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 636:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt is not enabled.
 637:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt is enabled.
 638:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 639:Drivers/CMSIS/Include/core_cm0.h ****  */
 640:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 641:Drivers/CMSIS/Include/core_cm0.h **** {
 642:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 643:Drivers/CMSIS/Include/core_cm0.h ****   {
 644:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 645:Drivers/CMSIS/Include/core_cm0.h ****   }
 646:Drivers/CMSIS/Include/core_cm0.h ****   else
 647:Drivers/CMSIS/Include/core_cm0.h ****   {
 648:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 649:Drivers/CMSIS/Include/core_cm0.h ****   }
 650:Drivers/CMSIS/Include/core_cm0.h **** }
 651:Drivers/CMSIS/Include/core_cm0.h **** 
 652:Drivers/CMSIS/Include/core_cm0.h **** 
 653:Drivers/CMSIS/Include/core_cm0.h **** /**
 654:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Disable Interrupt
 655:Drivers/CMSIS/Include/core_cm0.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 656:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 657:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 658:Drivers/CMSIS/Include/core_cm0.h ****  */
 659:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 660:Drivers/CMSIS/Include/core_cm0.h **** {
 661:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 662:Drivers/CMSIS/Include/core_cm0.h ****   {
 663:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 664:Drivers/CMSIS/Include/core_cm0.h ****     __DSB();
 665:Drivers/CMSIS/Include/core_cm0.h ****     __ISB();
 666:Drivers/CMSIS/Include/core_cm0.h ****   }
 667:Drivers/CMSIS/Include/core_cm0.h **** }
 668:Drivers/CMSIS/Include/core_cm0.h **** 
 669:Drivers/CMSIS/Include/core_cm0.h **** 
 670:Drivers/CMSIS/Include/core_cm0.h **** /**
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 29


 671:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Pending Interrupt
 672:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 673:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 674:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt status is not pending.
 675:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt status is pending.
 676:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 677:Drivers/CMSIS/Include/core_cm0.h ****  */
 678:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 679:Drivers/CMSIS/Include/core_cm0.h **** {
 680:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 681:Drivers/CMSIS/Include/core_cm0.h ****   {
 682:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 683:Drivers/CMSIS/Include/core_cm0.h ****   }
 684:Drivers/CMSIS/Include/core_cm0.h ****   else
 685:Drivers/CMSIS/Include/core_cm0.h ****   {
 686:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 687:Drivers/CMSIS/Include/core_cm0.h ****   }
 688:Drivers/CMSIS/Include/core_cm0.h **** }
 689:Drivers/CMSIS/Include/core_cm0.h **** 
 690:Drivers/CMSIS/Include/core_cm0.h **** 
 691:Drivers/CMSIS/Include/core_cm0.h **** /**
 692:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Pending Interrupt
 693:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 694:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 695:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 696:Drivers/CMSIS/Include/core_cm0.h ****  */
 697:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 698:Drivers/CMSIS/Include/core_cm0.h **** {
 699:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 700:Drivers/CMSIS/Include/core_cm0.h ****   {
 701:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 702:Drivers/CMSIS/Include/core_cm0.h ****   }
 703:Drivers/CMSIS/Include/core_cm0.h **** }
 704:Drivers/CMSIS/Include/core_cm0.h **** 
 705:Drivers/CMSIS/Include/core_cm0.h **** 
 706:Drivers/CMSIS/Include/core_cm0.h **** /**
 707:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Clear Pending Interrupt
 708:Drivers/CMSIS/Include/core_cm0.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 709:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 710:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 711:Drivers/CMSIS/Include/core_cm0.h ****  */
 712:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 713:Drivers/CMSIS/Include/core_cm0.h **** {
 714:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 715:Drivers/CMSIS/Include/core_cm0.h ****   {
 716:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 717:Drivers/CMSIS/Include/core_cm0.h ****   }
 718:Drivers/CMSIS/Include/core_cm0.h **** }
 719:Drivers/CMSIS/Include/core_cm0.h **** 
 720:Drivers/CMSIS/Include/core_cm0.h **** 
 721:Drivers/CMSIS/Include/core_cm0.h **** /**
 722:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Interrupt Priority
 723:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 724:Drivers/CMSIS/Include/core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 725:Drivers/CMSIS/Include/core_cm0.h ****            or negative to specify a processor exception.
 726:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 727:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]  priority  Priority to set.
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 30


 728:Drivers/CMSIS/Include/core_cm0.h ****   \note    The priority cannot be set for every processor exception.
 729:Drivers/CMSIS/Include/core_cm0.h ****  */
 730:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 527              		.loc 2 730 22 view .LVU144
 528              	.LBB13:
 731:Drivers/CMSIS/Include/core_cm0.h **** {
 732:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 529              		.loc 2 732 3 view .LVU145
 733:Drivers/CMSIS/Include/core_cm0.h ****   {
 734:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 530              		.loc 2 734 5 view .LVU146
 531              		.loc 2 734 52 is_stmt 0 view .LVU147
 532 00f2 C721     		movs	r1, #199
 533 00f4 8900     		lsls	r1, r1, #2
 534 00f6 5A58     		ldr	r2, [r3, r1]
 535              		.loc 2 734 33 view .LVU148
 536 00f8 3948     		ldr	r0, .L37+56
 537 00fa 0240     		ands	r2, r0
 538              		.loc 2 734 30 view .LVU149
 539 00fc 5A50     		str	r2, [r3, r1]
 540              	.LVL26:
 541              		.loc 2 734 30 view .LVU150
 542 00fe 35E0     		b	.L22
 543              	.LVL27:
 544              	.L25:
 545              		.loc 2 734 30 view .LVU151
 546              	.LBE13:
 547              	.LBE12:
 548              	.LBB14:
 143:Src/main.c    ****       {
 549              		.loc 1 143 7 view .LVU152
 550 0100 6F2B     		cmp	r3, #111
 551 0102 0FD0     		beq	.L30
 552 0104 722B     		cmp	r3, #114
 553 0106 05D0     		beq	.L31
 554 0108 672B     		cmp	r3, #103
 555 010a 1FD1     		bne	.L29
 158:Src/main.c    ****         transmitCharacter('g');
 556              		.loc 1 158 9 is_stmt 1 view .LVU153
 557              	.LVL28:
 159:Src/main.c    ****         break;
 558              		.loc 1 159 9 view .LVU154
 559 010c 6720     		movs	r0, #103
 560 010e FFF7FEFF 		bl	transmitCharacter
 561              	.LVL29:
 160:Src/main.c    ****       case '0':
 562              		.loc 1 160 9 view .LVU155
 563 0112 1EE0     		b	.L33
 564              	.LVL30:
 565              	.L31:
 146:Src/main.c    ****         transmitCharacter('r');
 566              		.loc 1 146 9 view .LVU156
 147:Src/main.c    ****         break;
 567              		.loc 1 147 9 view .LVU157
 568 0114 7220     		movs	r0, #114
 569 0116 FFF7FEFF 		bl	transmitCharacter
 570              	.LVL31:
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 31


 148:Src/main.c    ****       case 'b':
 571              		.loc 1 148 9 view .LVU158
 572 011a 1AE0     		b	.L33
 573              	.LVL32:
 574              	.L24:
 150:Src/main.c    ****         transmitCharacter('b');
 575              		.loc 1 150 9 view .LVU159
 151:Src/main.c    ****         break;
 576              		.loc 1 151 9 view .LVU160
 577 011c 6220     		movs	r0, #98
 578 011e FFF7FEFF 		bl	transmitCharacter
 579              	.LVL33:
 152:Src/main.c    ****       case 'o':
 580              		.loc 1 152 9 view .LVU161
 581 0122 16E0     		b	.L33
 582              	.LVL34:
 583              	.L30:
 154:Src/main.c    ****         transmitCharacter('o');
 584              		.loc 1 154 9 view .LVU162
 155:Src/main.c    ****         break;
 585              		.loc 1 155 9 view .LVU163
 586 0124 6F20     		movs	r0, #111
 587 0126 FFF7FEFF 		bl	transmitCharacter
 588              	.LVL35:
 156:Src/main.c    ****       case 'g':
 589              		.loc 1 156 9 view .LVU164
 590 012a 12E0     		b	.L33
 591              	.LVL36:
 592              	.L26:
 166:Src/main.c    ****         transmitCharacter('1');
 593              		.loc 1 166 9 view .LVU165
 594 012c 0122     		movs	r2, #1
 595 012e 0021     		movs	r1, #0
 596 0130 1E48     		ldr	r0, .L37+4
 597 0132 FFF7FEFF 		bl	HAL_GPIO_WritePin
 598              	.LVL37:
 167:Src/main.c    ****         break;
 599              		.loc 1 167 9 view .LVU166
 600 0136 3120     		movs	r0, #49
 601 0138 FFF7FEFF 		bl	transmitCharacter
 602              	.LVL38:
 168:Src/main.c    ****       case '2':
 603              		.loc 1 168 9 view .LVU167
 604 013c 09E0     		b	.L33
 605              	.L27:
 170:Src/main.c    ****         transmitCharacter('2');
 606              		.loc 1 170 9 view .LVU168
 607 013e 0021     		movs	r1, #0
 608 0140 1A48     		ldr	r0, .L37+4
 609 0142 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 610              	.LVL39:
 171:Src/main.c    ****       default:
 611              		.loc 1 171 9 view .LVU169
 612 0146 3220     		movs	r0, #50
 613 0148 FFF7FEFF 		bl	transmitCharacter
 614              	.LVL40:
 615              	.L29:
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 32


 173:Src/main.c    ****         break;
 616              		.loc 1 173 9 view .LVU170
 617 014c 2548     		ldr	r0, .L37+60
 618 014e FFF7FEFF 		bl	transmitString
 619              	.LVL41:
 174:Src/main.c    ****       }
 620              		.loc 1 174 9 view .LVU171
 621              	.L33:
 176:Src/main.c    ****       count++;
 622              		.loc 1 176 7 view .LVU172
 176:Src/main.c    ****       count++;
 623              		.loc 1 176 15 is_stmt 0 view .LVU173
 624 0152 254B     		ldr	r3, .L37+64
 625 0154 0022     		movs	r2, #0
 626 0156 1A60     		str	r2, [r3]
 177:Src/main.c    ****       if (count >= 2)
 627              		.loc 1 177 7 is_stmt 1 view .LVU174
 177:Src/main.c    ****       if (count >= 2)
 628              		.loc 1 177 12 is_stmt 0 view .LVU175
 629 0158 244B     		ldr	r3, .L37+68
 630 015a 1A68     		ldr	r2, [r3]
 631 015c 0132     		adds	r2, r2, #1
 632 015e 1A60     		str	r2, [r3]
 178:Src/main.c    ****         count = 0;
 633              		.loc 1 178 7 is_stmt 1 view .LVU176
 178:Src/main.c    ****         count = 0;
 634              		.loc 1 178 17 is_stmt 0 view .LVU177
 635 0160 1B68     		ldr	r3, [r3]
 178:Src/main.c    ****         count = 0;
 636              		.loc 1 178 10 view .LVU178
 637 0162 012B     		cmp	r3, #1
 638 0164 02DD     		ble	.L22
 179:Src/main.c    ****     }
 639              		.loc 1 179 9 is_stmt 1 view .LVU179
 179:Src/main.c    ****     }
 640              		.loc 1 179 15 is_stmt 0 view .LVU180
 641 0166 214B     		ldr	r3, .L37+68
 642 0168 0022     		movs	r2, #0
 643 016a 1A60     		str	r2, [r3]
 644              	.L22:
 645              	.LBE14:
 138:Src/main.c    ****     // ******** 4.2 General Configuration ******** //
 646              		.loc 1 138 45 is_stmt 1 discriminator 1 view .LVU181
 138:Src/main.c    ****     // ******** 4.2 General Configuration ******** //
 647              		.loc 1 138 12 discriminator 1 view .LVU182
 138:Src/main.c    ****     // ******** 4.2 General Configuration ******** //
 648              		.loc 1 138 20 is_stmt 0 discriminator 1 view .LVU183
 649 016c 1A4B     		ldr	r3, .L37+48
 650 016e DB69     		ldr	r3, [r3, #28]
 138:Src/main.c    ****     // ******** 4.2 General Configuration ******** //
 651              		.loc 1 138 12 discriminator 1 view .LVU184
 652 0170 9B06     		lsls	r3, r3, #26
 653 0172 FBD5     		bpl	.L22
 140:Src/main.c    ****     {
 654              		.loc 1 140 5 is_stmt 1 view .LVU185
 140:Src/main.c    ****     {
 655              		.loc 1 140 18 is_stmt 0 view .LVU186
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 33


 656 0174 1C4B     		ldr	r3, .L37+64
 657 0176 1B68     		ldr	r3, [r3]
 140:Src/main.c    ****     {
 658              		.loc 1 140 8 view .LVU187
 659 0178 012B     		cmp	r3, #1
 660 017a F7D1     		bne	.L22
 661              	.LBB15:
 142:Src/main.c    ****       switch (receivedChar)
 662              		.loc 1 142 7 is_stmt 1 view .LVU188
 663              	.LVL42:
 143:Src/main.c    ****       {
 664              		.loc 1 143 7 view .LVU189
 665 017c 1C4B     		ldr	r3, .L37+72
 666 017e 1A78     		ldrb	r2, [r3]
 667 0180 D3B2     		uxtb	r3, r2
 668 0182 622A     		cmp	r2, #98
 669 0184 CAD0     		beq	.L24
 670 0186 622B     		cmp	r3, #98
 671 0188 BAD8     		bhi	.L25
 672 018a 312B     		cmp	r3, #49
 673 018c CED0     		beq	.L26
 674 018e 322B     		cmp	r3, #50
 675 0190 D5D0     		beq	.L27
 676 0192 302B     		cmp	r3, #48
 677 0194 DAD1     		bne	.L29
 162:Src/main.c    ****         transmitCharacter('0');
 678              		.loc 1 162 9 view .LVU190
 679 0196 0022     		movs	r2, #0
 680 0198 0021     		movs	r1, #0
 681 019a 0448     		ldr	r0, .L37+4
 682 019c FFF7FEFF 		bl	HAL_GPIO_WritePin
 683              	.LVL43:
 163:Src/main.c    ****         break;
 684              		.loc 1 163 9 view .LVU191
 685 01a0 3020     		movs	r0, #48
 686 01a2 FFF7FEFF 		bl	transmitCharacter
 687              	.LVL44:
 164:Src/main.c    ****       case '1':
 688              		.loc 1 164 9 view .LVU192
 689 01a6 D4E7     		b	.L33
 690              	.L38:
 691              		.align	2
 692              	.L37:
 693 01a8 00100240 		.word	1073876992
 694 01ac 00080048 		.word	1207961600
 695 01b0 FFFEFFFF 		.word	-257
 696 01b4 FFFDFFFF 		.word	-513
 697 01b8 FFFBFFFF 		.word	-1025
 698 01bc FFF7FFFF 		.word	-2049
 699 01c0 FFFFFDFF 		.word	-131073
 700 01c4 FFFFFBFF 		.word	-262145
 701 01c8 FFFFF7FF 		.word	-524289
 702 01cc FFFFDFFF 		.word	-2097153
 703 01d0 FFFFBFFF 		.word	-4194305
 704 01d4 FFFF7FFF 		.word	-8388609
 705 01d8 00480040 		.word	1073760256
 706 01dc 00E100E0 		.word	-536813312
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 34


 707 01e0 FF00FFFF 		.word	-65281
 708 01e4 00000000 		.word	.LANCHOR0
 709 01e8 00000000 		.word	newData
 710 01ec 00000000 		.word	count
 711 01f0 00000000 		.word	receivedChar
 712              	.LBE15:
 713              		.cfi_endproc
 714              	.LFE40:
 716              		.global	count
 717              		.section	.bss.count,"aw",%nobits
 718              		.align	2
 721              	count:
 722 0000 00000000 		.space	4
 723              		.global	newData
 724              		.section	.bss.newData,"aw",%nobits
 725              		.align	2
 728              	newData:
 729 0000 00000000 		.space	4
 730              		.global	receivedChar
 731              		.section	.bss.receivedChar,"aw",%nobits
 734              	receivedChar:
 735 0000 00       		.space	1
 736              		.section	.rodata
 737              		.align	2
 738              		.set	.LANCHOR0,. + 0
 739              	.LC6:
 740 0000 4572726F 		.ascii	"Error: Input needs to be 2 characters with correct "
 740      723A2049 
 740      6E707574 
 740      206E6565 
 740      64732074 
 741 0033 63726974 		.ascii	"criteria of r,b,o,g and 0-2\000\000"
 741      65726961 
 741      206F6620 
 741      722C622C 
 741      6F2C6720 
 742              		.text
 743              	.Letext0:
 744              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 745              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 746              		.file 5 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 747              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 748              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 749              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 750              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 751              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 752              		.file 11 "<built-in>"
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:19     .text.USART3_IRQHandler:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:25     .text.USART3_IRQHandler:00000000 USART3_IRQHandler
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:51     .text.USART3_IRQHandler:00000014 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:734    .bss.receivedChar:00000000 receivedChar
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:728    .bss.newData:00000000 newData
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:58     .text.transmitCharacter:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:64     .text.transmitCharacter:00000000 transmitCharacter
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:91     .text.transmitCharacter:00000010 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:96     .text.transmitString:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:102    .text.transmitString:00000000 transmitString
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:152    .text._Error_Handler:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:158    .text._Error_Handler:00000000 _Error_Handler
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:176    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:181    .text.SystemClock_Config:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:187    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:291    .text.SystemClock_Config:00000070 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:296    .text.main:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:302    .text.main:00000000 main
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:693    .text.main:000001a8 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:721    .bss.count:00000000 count
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:718    .bss.count:00000000 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:725    .bss.newData:00000000 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:735    .bss.receivedChar:00000000 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccwLsMKn.s:737    .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
memset
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_GPIO_TogglePin
