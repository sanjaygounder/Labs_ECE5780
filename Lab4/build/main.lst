ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.transmitCharacter,"ax",%progbits
  19              		.align	1
  20              		.global	transmitCharacter
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	transmitCharacter:
  26              	.LFB41:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Brandon Mouser
   4:Src/main.c    ****   * U0962682
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   ** This notice applies to any and all portions of this file
  11:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****   * inserted by the user or by software development tools
  14:Src/main.c    ****   * are owned by their respective copyright owners.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****   * are permitted provided that the following conditions are met:
  20:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *      and/or other materials provided with the distribution.
  25:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****   *      without specific prior written permission.
  28:Src/main.c    ****   *
  29:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 2


  33:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****   *
  40:Src/main.c    ****   ******************************************************************************
  41:Src/main.c    ****   */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** #include "stm32f072xb.h"
  47:Src/main.c    **** void _Error_Handler(char * file, int line);
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END Includes */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN PV */
  56:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** void SystemClock_Config(void);
  62:Src/main.c    **** void transmitCharacter(char);
  63:Src/main.c    **** void transmitString(char*);
  64:Src/main.c    **** // void TIM3_IRQHandler(void);
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE BEGIN PFP */
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END PFP */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /**
  76:Src/main.c    ****   * @brief  The application entry point.
  77:Src/main.c    ****   * @retval int
  78:Src/main.c    ****   */
  79:Src/main.c    **** int main(void)
  80:Src/main.c    **** {
  81:Src/main.c    **** 	HAL_Init(); // Reset of all peripherals, init the Flash and Systick
  82:Src/main.c    **** 	SystemClock_Config(); //Configure the system clock
  83:Src/main.c    **** 
  84:Src/main.c    **** 	__HAL_RCC_GPIOC_CLK_ENABLE(); // Enable the GPIOC clock in the RCC
  85:Src/main.c    **** 	// Set up a configuration struct to pass to the initialization function
  86:Src/main.c    **** 	GPIO_InitTypeDef initStr = {GPIO_PIN_4| GPIO_PIN_5| GPIO_PIN_6 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN
  87:Src/main.c    **** 	GPIO_MODE_OUTPUT_PP,
  88:Src/main.c    **** 	GPIO_SPEED_FREQ_LOW,
  89:Src/main.c    **** 	GPIO_NOPULL};
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 3


  90:Src/main.c    **** 	HAL_GPIO_Init(GPIOC, &initStr); // Initialize pins PC6,7,8 & PC9
  91:Src/main.c    **** 	// HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET); // Start PC8 high (orange)
  92:Src/main.c    **** 
  93:Src/main.c    ****   // **** Alternate Function **** //
  94:Src/main.c    ****   // Set the selected pins into alternate function mode and program the correct alternate function 
  95:Src/main.c    ****   //PC4 = USART3_TX (AF1) -- transmitting
  96:Src/main.c    ****   //PC5 = USART3_RX (AF1) -- receiving
  97:Src/main.c    ****   // Clear PC4/5 MODER4/5 and then set to alternate (10)
  98:Src/main.c    ****   GPIOC->MODER &= ~(1<<8); // clear PC4 bit
  99:Src/main.c    ****   GPIOC->MODER &= ~(1<<9); // clear PC4 bit
 100:Src/main.c    ****   GPIOC->MODER |= (1<<9); // set to alternate (10)
 101:Src/main.c    ****   GPIOC->MODER &= ~(1<<10); // clear PC5 bit
 102:Src/main.c    ****   GPIOC->MODER &= ~(1<<11); // clear PC5 bit
 103:Src/main.c    ****   GPIOC->MODER |= (1<<11); // set to alternate (10)
 104:Src/main.c    ****   // Assign AF1 to PC4 and PC5 -- 0001
 105:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 16); //AFSEL4 bit 16
 106:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 17); //AFSEL4 bit 17 (clear)
 107:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 18); //AFSEL4 bit 18 (clear)
 108:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 19); //AFSEL4 bit 19 (clear)
 109:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 20); //AFSEL5 bit 20
 110:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 21); //AFSEL5 bit 21 (clear)
 111:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 22); //AFSEL5 bit 22 (clear)
 112:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 23); //AFSEL5 bit 23 (clear)
 113:Src/main.c    **** 
 114:Src/main.c    ****   // **** Initialize the USART **** //
 115:Src/main.c    ****   // Enable the USART clock in the RCC
 116:Src/main.c    ****   RCC->APB1ENR = RCC_APB1ENR_USART3EN;
 117:Src/main.c    ****   // Set the Baud rate for communication to be 115200 bits/second.
 118:Src/main.c    ****   USART3->BRR = HAL_RCC_GetHCLKFreq() / 115200; 
 119:Src/main.c    ****   // Enable transmitter and receiver hardware
 120:Src/main.c    ****   USART3->CR1 |= (1 << 3); // Enable transmitter
 121:Src/main.c    ****   USART3->CR1 |= (1 << 2); // Enable receiver
 122:Src/main.c    ****   USART3->CR1 |= (1 << 0); // Enable USART
 123:Src/main.c    ****   // **** Initialize the USART **** //
 124:Src/main.c    **** 
 125:Src/main.c    **** 	while (1) {
 126:Src/main.c    ****     // Check and wait on the USART status flag that indicates the receive (read) register is not em
 127:Src/main.c    ****     while (!(USART1->ISR & USART_ISR_RXNE)){}
 128:Src/main.c    ****     // LED to check: red (114)
 129:Src/main.c    ****     // Read the received character
 130:Src/main.c    ****     uint8_t received_char = USART3->RDR;
 131:Src/main.c    ****     switch (received_char) {
 132:Src/main.c    ****       case 'r':
 133:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_6);
 134:Src/main.c    ****       case 'b':
 135:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_7);
 136:Src/main.c    ****     default:
 137:Src/main.c    ****       break;
 138:Src/main.c    ****     }
 139:Src/main.c    **** 	}
 140:Src/main.c    **** }
 141:Src/main.c    **** 
 142:Src/main.c    **** /**
 143:Src/main.c    **** *  Transmits a single character on the USART
 144:Src/main.c    **** */
 145:Src/main.c    **** void transmitCharacter(char c){
  27              		.loc 1 145 31 view -0
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 4


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
 146:Src/main.c    ****   // Check and wait on the USART status flag that indicates the transmit register is empty
 147:Src/main.c    ****   while(!(USART3->ISR & USART_ISR_TXE)){
 148:Src/main.c    **** 
 149:Src/main.c    ****   }
  34              		.loc 1 149 3 view .LVU1
 147:Src/main.c    **** 
  35              		.loc 1 147 9 discriminator 1 view .LVU2
 147:Src/main.c    **** 
  36              		.loc 1 147 17 is_stmt 0 discriminator 1 view .LVU3
  37 0000 034B     		ldr	r3, .L4
  38 0002 DB69     		ldr	r3, [r3, #28]
 147:Src/main.c    **** 
  39              		.loc 1 147 9 discriminator 1 view .LVU4
  40 0004 1B06     		lsls	r3, r3, #24
  41 0006 FBD5     		bpl	.L2
 150:Src/main.c    ****   // Write the character into the transmit data register
 151:Src/main.c    ****   USART3->TDR = c;
  42              		.loc 1 151 3 is_stmt 1 view .LVU5
  43              		.loc 1 151 15 is_stmt 0 view .LVU6
  44 0008 014B     		ldr	r3, .L4
  45 000a 1885     		strh	r0, [r3, #40]
 152:Src/main.c    **** }
  46              		.loc 1 152 1 view .LVU7
  47              		@ sp needed
  48 000c 7047     		bx	lr
  49              	.L5:
  50 000e C046     		.align	2
  51              	.L4:
  52 0010 00480040 		.word	1073760256
  53              		.cfi_endproc
  54              	.LFE41:
  56              		.section	.text.transmitString,"ax",%progbits
  57              		.align	1
  58              		.global	transmitString
  59              		.syntax unified
  60              		.code	16
  61              		.thumb_func
  63              	transmitString:
  64              	.LVL1:
  65              	.LFB42:
 153:Src/main.c    **** 
 154:Src/main.c    **** /**
 155:Src/main.c    **** *  Transmits a string on the USART
 156:Src/main.c    **** */
 157:Src/main.c    **** void transmitString(char* s){
  66              		.loc 1 157 29 is_stmt 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		.loc 1 157 29 is_stmt 0 view .LVU9
  71 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 5


  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 16
  74              		.cfi_offset 4, -16
  75              		.cfi_offset 5, -12
  76              		.cfi_offset 6, -8
  77              		.cfi_offset 14, -4
  78 0002 0500     		movs	r5, r0
 158:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++){
  79              		.loc 1 158 3 is_stmt 1 view .LVU10
  80              	.LBB2:
  81              		.loc 1 158 8 view .LVU11
  82              	.LVL2:
  83              		.loc 1 158 12 is_stmt 0 view .LVU12
  84 0004 0024     		movs	r4, #0
  85              		.loc 1 158 3 view .LVU13
  86 0006 02E0     		b	.L7
  87              	.LVL3:
  88              	.L8:
 159:Src/main.c    ****     transmitCharacter(s[i]);
  89              		.loc 1 159 5 is_stmt 1 view .LVU14
  90 0008 FFF7FEFF 		bl	transmitCharacter
  91              	.LVL4:
 158:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++){
  92              		.loc 1 158 34 discriminator 3 view .LVU15
  93 000c 0134     		adds	r4, r4, #1
  94              	.LVL5:
  95              	.L7:
 158:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++){
  96              		.loc 1 158 24 discriminator 1 view .LVU16
 158:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++){
  97              		.loc 1 158 20 is_stmt 0 discriminator 1 view .LVU17
  98 000e 285D     		ldrb	r0, [r5, r4]
 158:Src/main.c    ****   for (int i = 0; s[i] != '\0'; i++){
  99              		.loc 1 158 24 discriminator 1 view .LVU18
 100 0010 0028     		cmp	r0, #0
 101 0012 F9D1     		bne	.L8
 102              	.LBE2:
 160:Src/main.c    ****   }
 161:Src/main.c    **** }
 103              		.loc 1 161 1 view .LVU19
 104              		@ sp needed
 105              	.LVL6:
 106              	.LVL7:
 107              		.loc 1 161 1 view .LVU20
 108 0014 70BD     		pop	{r4, r5, r6, pc}
 109              		.cfi_endproc
 110              	.LFE42:
 112              		.section	.text._Error_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	_Error_Handler
 115              		.syntax unified
 116              		.code	16
 117              		.thumb_func
 119              	_Error_Handler:
 120              	.LFB44:
 162:Src/main.c    **** 
 163:Src/main.c    **** /** System Clock Configuration
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 6


 164:Src/main.c    **** */
 165:Src/main.c    **** void SystemClock_Config(void)
 166:Src/main.c    **** {
 167:Src/main.c    **** 
 168:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 169:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 170:Src/main.c    **** 
 171:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 172:Src/main.c    ****     */
 173:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 174:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 175:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 176:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 177:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 178:Src/main.c    ****   {
 179:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 180:Src/main.c    ****   }
 181:Src/main.c    **** 
 182:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 183:Src/main.c    ****     */
 184:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 185:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 186:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 187:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 188:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 189:Src/main.c    **** 
 190:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 191:Src/main.c    ****   {
 192:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 193:Src/main.c    ****   }
 194:Src/main.c    **** 
 195:Src/main.c    ****     /**Configure the Systick interrupt time
 196:Src/main.c    ****     */
 197:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 198:Src/main.c    **** 
 199:Src/main.c    ****     /**Configure the Systick
 200:Src/main.c    ****     */
 201:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 204:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 205:Src/main.c    **** }
 206:Src/main.c    **** 
 207:Src/main.c    **** /* USER CODE BEGIN 4 */
 208:Src/main.c    **** 
 209:Src/main.c    **** /* USER CODE END 4 */
 210:Src/main.c    **** 
 211:Src/main.c    **** /**
 212:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 213:Src/main.c    ****   * @param  None
 214:Src/main.c    ****   * @retval None
 215:Src/main.c    ****   */
 216:Src/main.c    **** void _Error_Handler(char * file, int line)
 217:Src/main.c    **** {
 121              		.loc 1 217 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 7


 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.LVL8:
 128              	.L10:
 218:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 219:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 220:Src/main.c    ****   while(1)
 129              		.loc 1 220 3 view .LVU22
 221:Src/main.c    ****   {
 222:Src/main.c    ****   }
 130              		.loc 1 222 3 view .LVU23
 220:Src/main.c    ****   {
 131              		.loc 1 220 8 view .LVU24
 132 0000 FEE7     		b	.L10
 133              		.cfi_endproc
 134              	.LFE44:
 136              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 137              		.align	2
 138              	.LC0:
 139 0000 5372632F 		.ascii	"Src/main.c\000"
 139      6D61696E 
 139      2E6300
 140              		.global	__aeabi_uidiv
 141              		.section	.text.SystemClock_Config,"ax",%progbits
 142              		.align	1
 143              		.global	SystemClock_Config
 144              		.syntax unified
 145              		.code	16
 146              		.thumb_func
 148              	SystemClock_Config:
 149              	.LFB43:
 166:Src/main.c    **** 
 150              		.loc 1 166 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 72
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154 0000 00B5     		push	{lr}
 155              	.LCFI1:
 156              		.cfi_def_cfa_offset 4
 157              		.cfi_offset 14, -4
 158 0002 93B0     		sub	sp, sp, #76
 159              	.LCFI2:
 160              		.cfi_def_cfa_offset 80
 168:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 161              		.loc 1 168 3 view .LVU26
 169:Src/main.c    **** 
 162              		.loc 1 169 3 view .LVU27
 173:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 163              		.loc 1 173 3 view .LVU28
 173:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 164              		.loc 1 173 36 is_stmt 0 view .LVU29
 165 0004 0223     		movs	r3, #2
 166 0006 0593     		str	r3, [sp, #20]
 174:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 167              		.loc 1 174 3 is_stmt 1 view .LVU30
 174:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 8


 168              		.loc 1 174 30 is_stmt 0 view .LVU31
 169 0008 013B     		subs	r3, r3, #1
 170 000a 0893     		str	r3, [sp, #32]
 175:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 171              		.loc 1 175 3 is_stmt 1 view .LVU32
 175:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 172              		.loc 1 175 41 is_stmt 0 view .LVU33
 173 000c 0F33     		adds	r3, r3, #15
 174 000e 0993     		str	r3, [sp, #36]
 176:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 175              		.loc 1 176 3 is_stmt 1 view .LVU34
 176:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 176              		.loc 1 176 34 is_stmt 0 view .LVU35
 177 0010 0023     		movs	r3, #0
 178 0012 0E93     		str	r3, [sp, #56]
 177:Src/main.c    ****   {
 179              		.loc 1 177 3 is_stmt 1 view .LVU36
 177:Src/main.c    ****   {
 180              		.loc 1 177 7 is_stmt 0 view .LVU37
 181 0014 05A8     		add	r0, sp, #20
 182 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 183              	.LVL9:
 177:Src/main.c    ****   {
 184              		.loc 1 177 6 discriminator 1 view .LVU38
 185 001a 0028     		cmp	r0, #0
 186 001c 1ED1     		bne	.L14
 184:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 187              		.loc 1 184 3 is_stmt 1 view .LVU39
 184:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 188              		.loc 1 184 31 is_stmt 0 view .LVU40
 189 001e 0723     		movs	r3, #7
 190 0020 0193     		str	r3, [sp, #4]
 186:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191              		.loc 1 186 3 is_stmt 1 view .LVU41
 186:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 192              		.loc 1 186 34 is_stmt 0 view .LVU42
 193 0022 0023     		movs	r3, #0
 194 0024 0293     		str	r3, [sp, #8]
 187:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 195              		.loc 1 187 3 is_stmt 1 view .LVU43
 187:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 196              		.loc 1 187 35 is_stmt 0 view .LVU44
 197 0026 0393     		str	r3, [sp, #12]
 188:Src/main.c    **** 
 198              		.loc 1 188 3 is_stmt 1 view .LVU45
 188:Src/main.c    **** 
 199              		.loc 1 188 36 is_stmt 0 view .LVU46
 200 0028 0493     		str	r3, [sp, #16]
 190:Src/main.c    ****   {
 201              		.loc 1 190 3 is_stmt 1 view .LVU47
 190:Src/main.c    ****   {
 202              		.loc 1 190 7 is_stmt 0 view .LVU48
 203 002a 0021     		movs	r1, #0
 204 002c 01A8     		add	r0, sp, #4
 205 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 206              	.LVL10:
 190:Src/main.c    ****   {
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 9


 207              		.loc 1 190 6 discriminator 1 view .LVU49
 208 0032 0028     		cmp	r0, #0
 209 0034 16D1     		bne	.L15
 197:Src/main.c    **** 
 210              		.loc 1 197 3 is_stmt 1 view .LVU50
 197:Src/main.c    **** 
 211              		.loc 1 197 22 is_stmt 0 view .LVU51
 212 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 213              	.LVL11:
 197:Src/main.c    **** 
 214              		.loc 1 197 3 discriminator 1 view .LVU52
 215 003a FA21     		movs	r1, #250
 216 003c 8900     		lsls	r1, r1, #2
 217 003e FFF7FEFF 		bl	__aeabi_uidiv
 218              	.LVL12:
 219 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 220              	.LVL13:
 201:Src/main.c    **** 
 221              		.loc 1 201 3 is_stmt 1 view .LVU53
 222 0046 0420     		movs	r0, #4
 223 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 224              	.LVL14:
 204:Src/main.c    **** }
 225              		.loc 1 204 3 view .LVU54
 226 004c 0120     		movs	r0, #1
 227 004e 0022     		movs	r2, #0
 228 0050 0021     		movs	r1, #0
 229 0052 4042     		rsbs	r0, r0, #0
 230 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 231              	.LVL15:
 205:Src/main.c    **** 
 232              		.loc 1 205 1 is_stmt 0 view .LVU55
 233 0058 13B0     		add	sp, sp, #76
 234              		@ sp needed
 235 005a 00BD     		pop	{pc}
 236              	.L14:
 179:Src/main.c    ****   }
 237              		.loc 1 179 5 is_stmt 1 view .LVU56
 238 005c 0348     		ldr	r0, .L16
 239 005e B321     		movs	r1, #179
 240 0060 FFF7FEFF 		bl	_Error_Handler
 241              	.LVL16:
 242              	.L15:
 192:Src/main.c    ****   }
 243              		.loc 1 192 5 view .LVU57
 244 0064 0148     		ldr	r0, .L16
 245 0066 C021     		movs	r1, #192
 246 0068 FFF7FEFF 		bl	_Error_Handler
 247              	.LVL17:
 248              	.L17:
 249              		.align	2
 250              	.L16:
 251 006c 00000000 		.word	.LC0
 252              		.cfi_endproc
 253              	.LFE43:
 255              		.section	.text.main,"ax",%progbits
 256              		.align	1
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 10


 257              		.global	main
 258              		.syntax unified
 259              		.code	16
 260              		.thumb_func
 262              	main:
 263              	.LFB40:
  80:Src/main.c    **** 	HAL_Init(); // Reset of all peripherals, init the Flash and Systick
 264              		.loc 1 80 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 24
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 70B5     		push	{r4, r5, r6, lr}
 269              	.LCFI3:
 270              		.cfi_def_cfa_offset 16
 271              		.cfi_offset 4, -16
 272              		.cfi_offset 5, -12
 273              		.cfi_offset 6, -8
 274              		.cfi_offset 14, -4
 275 0002 86B0     		sub	sp, sp, #24
 276              	.LCFI4:
 277              		.cfi_def_cfa_offset 40
  81:Src/main.c    **** 	SystemClock_Config(); //Configure the system clock
 278              		.loc 1 81 2 view .LVU59
 279 0004 FFF7FEFF 		bl	HAL_Init
 280              	.LVL18:
  82:Src/main.c    **** 
 281              		.loc 1 82 2 view .LVU60
 282 0008 FFF7FEFF 		bl	SystemClock_Config
 283              	.LVL19:
  84:Src/main.c    **** 	// Set up a configuration struct to pass to the initialization function
 284              		.loc 1 84 2 view .LVU61
 285              	.LBB3:
  84:Src/main.c    **** 	// Set up a configuration struct to pass to the initialization function
 286              		.loc 1 84 2 view .LVU62
  84:Src/main.c    **** 	// Set up a configuration struct to pass to the initialization function
 287              		.loc 1 84 2 view .LVU63
 288 000c 3F4D     		ldr	r5, .L25
 289 000e 6B69     		ldr	r3, [r5, #20]
 290 0010 8022     		movs	r2, #128
 291 0012 1203     		lsls	r2, r2, #12
 292 0014 1343     		orrs	r3, r2
 293 0016 6B61     		str	r3, [r5, #20]
  84:Src/main.c    **** 	// Set up a configuration struct to pass to the initialization function
 294              		.loc 1 84 2 view .LVU64
 295 0018 6B69     		ldr	r3, [r5, #20]
 296 001a 1340     		ands	r3, r2
 297 001c 0093     		str	r3, [sp]
  84:Src/main.c    **** 	// Set up a configuration struct to pass to the initialization function
 298              		.loc 1 84 2 view .LVU65
 299 001e 009B     		ldr	r3, [sp]
 300              	.LBE3:
  84:Src/main.c    **** 	// Set up a configuration struct to pass to the initialization function
 301              		.loc 1 84 2 view .LVU66
  86:Src/main.c    **** 	GPIO_MODE_OUTPUT_PP,
 302              		.loc 1 86 2 view .LVU67
  86:Src/main.c    **** 	GPIO_MODE_OUTPUT_PP,
 303              		.loc 1 86 19 is_stmt 0 view .LVU68
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 11


 304 0020 1422     		movs	r2, #20
 305 0022 0021     		movs	r1, #0
 306 0024 01A8     		add	r0, sp, #4
 307 0026 FFF7FEFF 		bl	memset
 308              	.LVL20:
 309 002a FC23     		movs	r3, #252
 310 002c 9B00     		lsls	r3, r3, #2
 311 002e 0193     		str	r3, [sp, #4]
 312 0030 0126     		movs	r6, #1
 313 0032 0296     		str	r6, [sp, #8]
  90:Src/main.c    **** 	// HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET); // Start PC8 high (orange)
 314              		.loc 1 90 2 is_stmt 1 view .LVU69
 315 0034 364C     		ldr	r4, .L25+4
 316 0036 01A9     		add	r1, sp, #4
 317 0038 2000     		movs	r0, r4
 318 003a FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL21:
  98:Src/main.c    ****   GPIOC->MODER &= ~(1<<9); // clear PC4 bit
 320              		.loc 1 98 3 view .LVU70
  98:Src/main.c    ****   GPIOC->MODER &= ~(1<<9); // clear PC4 bit
 321              		.loc 1 98 8 is_stmt 0 view .LVU71
 322 003e 2368     		ldr	r3, [r4]
  98:Src/main.c    ****   GPIOC->MODER &= ~(1<<9); // clear PC4 bit
 323              		.loc 1 98 16 view .LVU72
 324 0040 344A     		ldr	r2, .L25+8
 325 0042 1340     		ands	r3, r2
 326 0044 2360     		str	r3, [r4]
  99:Src/main.c    ****   GPIOC->MODER |= (1<<9); // set to alternate (10)
 327              		.loc 1 99 3 is_stmt 1 view .LVU73
  99:Src/main.c    ****   GPIOC->MODER |= (1<<9); // set to alternate (10)
 328              		.loc 1 99 8 is_stmt 0 view .LVU74
 329 0046 2368     		ldr	r3, [r4]
  99:Src/main.c    ****   GPIOC->MODER |= (1<<9); // set to alternate (10)
 330              		.loc 1 99 16 view .LVU75
 331 0048 334A     		ldr	r2, .L25+12
 332 004a 1340     		ands	r3, r2
 333 004c 2360     		str	r3, [r4]
 100:Src/main.c    ****   GPIOC->MODER &= ~(1<<10); // clear PC5 bit
 334              		.loc 1 100 3 is_stmt 1 view .LVU76
 100:Src/main.c    ****   GPIOC->MODER &= ~(1<<10); // clear PC5 bit
 335              		.loc 1 100 8 is_stmt 0 view .LVU77
 336 004e 2268     		ldr	r2, [r4]
 100:Src/main.c    ****   GPIOC->MODER &= ~(1<<10); // clear PC5 bit
 337              		.loc 1 100 16 view .LVU78
 338 0050 8023     		movs	r3, #128
 339 0052 9B00     		lsls	r3, r3, #2
 340 0054 1343     		orrs	r3, r2
 341 0056 2360     		str	r3, [r4]
 101:Src/main.c    ****   GPIOC->MODER &= ~(1<<11); // clear PC5 bit
 342              		.loc 1 101 3 is_stmt 1 view .LVU79
 101:Src/main.c    ****   GPIOC->MODER &= ~(1<<11); // clear PC5 bit
 343              		.loc 1 101 8 is_stmt 0 view .LVU80
 344 0058 2368     		ldr	r3, [r4]
 101:Src/main.c    ****   GPIOC->MODER &= ~(1<<11); // clear PC5 bit
 345              		.loc 1 101 16 view .LVU81
 346 005a 304A     		ldr	r2, .L25+16
 347 005c 1340     		ands	r3, r2
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 12


 348 005e 2360     		str	r3, [r4]
 102:Src/main.c    ****   GPIOC->MODER |= (1<<11); // set to alternate (10)
 349              		.loc 1 102 3 is_stmt 1 view .LVU82
 102:Src/main.c    ****   GPIOC->MODER |= (1<<11); // set to alternate (10)
 350              		.loc 1 102 8 is_stmt 0 view .LVU83
 351 0060 2368     		ldr	r3, [r4]
 102:Src/main.c    ****   GPIOC->MODER |= (1<<11); // set to alternate (10)
 352              		.loc 1 102 16 view .LVU84
 353 0062 2F4A     		ldr	r2, .L25+20
 354 0064 1340     		ands	r3, r2
 355 0066 2360     		str	r3, [r4]
 103:Src/main.c    ****   // Assign AF1 to PC4 and PC5 -- 0001
 356              		.loc 1 103 3 is_stmt 1 view .LVU85
 103:Src/main.c    ****   // Assign AF1 to PC4 and PC5 -- 0001
 357              		.loc 1 103 8 is_stmt 0 view .LVU86
 358 0068 2268     		ldr	r2, [r4]
 103:Src/main.c    ****   // Assign AF1 to PC4 and PC5 -- 0001
 359              		.loc 1 103 16 view .LVU87
 360 006a 8023     		movs	r3, #128
 361 006c 1B01     		lsls	r3, r3, #4
 362 006e 1343     		orrs	r3, r2
 363 0070 2360     		str	r3, [r4]
 105:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 17); //AFSEL4 bit 17 (clear)
 364              		.loc 1 105 3 is_stmt 1 view .LVU88
 105:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 17); //AFSEL4 bit 17 (clear)
 365              		.loc 1 105 13 is_stmt 0 view .LVU89
 366 0072 226A     		ldr	r2, [r4, #32]
 105:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 17); //AFSEL4 bit 17 (clear)
 367              		.loc 1 105 17 view .LVU90
 368 0074 8023     		movs	r3, #128
 369 0076 5B02     		lsls	r3, r3, #9
 370 0078 1343     		orrs	r3, r2
 371 007a 2362     		str	r3, [r4, #32]
 106:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 18); //AFSEL4 bit 18 (clear)
 372              		.loc 1 106 3 is_stmt 1 view .LVU91
 106:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 18); //AFSEL4 bit 18 (clear)
 373              		.loc 1 106 13 is_stmt 0 view .LVU92
 374 007c 236A     		ldr	r3, [r4, #32]
 106:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 18); //AFSEL4 bit 18 (clear)
 375              		.loc 1 106 17 view .LVU93
 376 007e 294A     		ldr	r2, .L25+24
 377 0080 1340     		ands	r3, r2
 378 0082 2362     		str	r3, [r4, #32]
 107:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 19); //AFSEL4 bit 19 (clear)
 379              		.loc 1 107 3 is_stmt 1 view .LVU94
 107:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 19); //AFSEL4 bit 19 (clear)
 380              		.loc 1 107 13 is_stmt 0 view .LVU95
 381 0084 236A     		ldr	r3, [r4, #32]
 107:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 19); //AFSEL4 bit 19 (clear)
 382              		.loc 1 107 17 view .LVU96
 383 0086 284A     		ldr	r2, .L25+28
 384 0088 1340     		ands	r3, r2
 385 008a 2362     		str	r3, [r4, #32]
 108:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 20); //AFSEL5 bit 20
 386              		.loc 1 108 3 is_stmt 1 view .LVU97
 108:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 20); //AFSEL5 bit 20
 387              		.loc 1 108 13 is_stmt 0 view .LVU98
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 13


 388 008c 236A     		ldr	r3, [r4, #32]
 108:Src/main.c    ****   GPIOC->AFR[0] |= (1 << 20); //AFSEL5 bit 20
 389              		.loc 1 108 17 view .LVU99
 390 008e 274A     		ldr	r2, .L25+32
 391 0090 1340     		ands	r3, r2
 392 0092 2362     		str	r3, [r4, #32]
 109:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 21); //AFSEL5 bit 21 (clear)
 393              		.loc 1 109 3 is_stmt 1 view .LVU100
 109:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 21); //AFSEL5 bit 21 (clear)
 394              		.loc 1 109 13 is_stmt 0 view .LVU101
 395 0094 226A     		ldr	r2, [r4, #32]
 109:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 21); //AFSEL5 bit 21 (clear)
 396              		.loc 1 109 17 view .LVU102
 397 0096 8023     		movs	r3, #128
 398 0098 5B03     		lsls	r3, r3, #13
 399 009a 1343     		orrs	r3, r2
 400 009c 2362     		str	r3, [r4, #32]
 110:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 22); //AFSEL5 bit 22 (clear)
 401              		.loc 1 110 3 is_stmt 1 view .LVU103
 110:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 22); //AFSEL5 bit 22 (clear)
 402              		.loc 1 110 13 is_stmt 0 view .LVU104
 403 009e 236A     		ldr	r3, [r4, #32]
 110:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 22); //AFSEL5 bit 22 (clear)
 404              		.loc 1 110 17 view .LVU105
 405 00a0 234A     		ldr	r2, .L25+36
 406 00a2 1340     		ands	r3, r2
 407 00a4 2362     		str	r3, [r4, #32]
 111:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 23); //AFSEL5 bit 23 (clear)
 408              		.loc 1 111 3 is_stmt 1 view .LVU106
 111:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 23); //AFSEL5 bit 23 (clear)
 409              		.loc 1 111 13 is_stmt 0 view .LVU107
 410 00a6 236A     		ldr	r3, [r4, #32]
 111:Src/main.c    ****   GPIOC->AFR[0] &= ~(1 << 23); //AFSEL5 bit 23 (clear)
 411              		.loc 1 111 17 view .LVU108
 412 00a8 224A     		ldr	r2, .L25+40
 413 00aa 1340     		ands	r3, r2
 414 00ac 2362     		str	r3, [r4, #32]
 112:Src/main.c    **** 
 415              		.loc 1 112 3 is_stmt 1 view .LVU109
 112:Src/main.c    **** 
 416              		.loc 1 112 13 is_stmt 0 view .LVU110
 417 00ae 236A     		ldr	r3, [r4, #32]
 112:Src/main.c    **** 
 418              		.loc 1 112 17 view .LVU111
 419 00b0 214A     		ldr	r2, .L25+44
 420 00b2 1340     		ands	r3, r2
 421 00b4 2362     		str	r3, [r4, #32]
 116:Src/main.c    ****   // Set the Baud rate for communication to be 115200 bits/second.
 422              		.loc 1 116 3 is_stmt 1 view .LVU112
 116:Src/main.c    ****   // Set the Baud rate for communication to be 115200 bits/second.
 423              		.loc 1 116 16 is_stmt 0 view .LVU113
 424 00b6 8023     		movs	r3, #128
 425 00b8 DB02     		lsls	r3, r3, #11
 426 00ba EB61     		str	r3, [r5, #28]
 118:Src/main.c    ****   // Enable transmitter and receiver hardware
 427              		.loc 1 118 3 is_stmt 1 view .LVU114
 118:Src/main.c    ****   // Enable transmitter and receiver hardware
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 14


 428              		.loc 1 118 17 is_stmt 0 view .LVU115
 429 00bc FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 430              	.LVL22:
 118:Src/main.c    ****   // Enable transmitter and receiver hardware
 431              		.loc 1 118 39 discriminator 1 view .LVU116
 432 00c0 E121     		movs	r1, #225
 433 00c2 4902     		lsls	r1, r1, #9
 434 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 435              	.LVL23:
 118:Src/main.c    ****   // Enable transmitter and receiver hardware
 436              		.loc 1 118 15 discriminator 1 view .LVU117
 437 00c8 1C4B     		ldr	r3, .L25+48
 438 00ca D860     		str	r0, [r3, #12]
 120:Src/main.c    ****   USART3->CR1 |= (1 << 2); // Enable receiver
 439              		.loc 1 120 3 is_stmt 1 view .LVU118
 120:Src/main.c    ****   USART3->CR1 |= (1 << 2); // Enable receiver
 440              		.loc 1 120 9 is_stmt 0 view .LVU119
 441 00cc 1A68     		ldr	r2, [r3]
 120:Src/main.c    ****   USART3->CR1 |= (1 << 2); // Enable receiver
 442              		.loc 1 120 15 view .LVU120
 443 00ce 0821     		movs	r1, #8
 444 00d0 0A43     		orrs	r2, r1
 445 00d2 1A60     		str	r2, [r3]
 121:Src/main.c    ****   USART3->CR1 |= (1 << 0); // Enable USART
 446              		.loc 1 121 3 is_stmt 1 view .LVU121
 121:Src/main.c    ****   USART3->CR1 |= (1 << 0); // Enable USART
 447              		.loc 1 121 9 is_stmt 0 view .LVU122
 448 00d4 1A68     		ldr	r2, [r3]
 121:Src/main.c    ****   USART3->CR1 |= (1 << 0); // Enable USART
 449              		.loc 1 121 15 view .LVU123
 450 00d6 0439     		subs	r1, r1, #4
 451 00d8 0A43     		orrs	r2, r1
 452 00da 1A60     		str	r2, [r3]
 122:Src/main.c    ****   // **** Initialize the USART **** //
 453              		.loc 1 122 3 is_stmt 1 view .LVU124
 122:Src/main.c    ****   // **** Initialize the USART **** //
 454              		.loc 1 122 9 is_stmt 0 view .LVU125
 455 00dc 1A68     		ldr	r2, [r3]
 122:Src/main.c    ****   // **** Initialize the USART **** //
 456              		.loc 1 122 15 view .LVU126
 457 00de 3243     		orrs	r2, r6
 458 00e0 1A60     		str	r2, [r3]
 459 00e2 07E0     		b	.L19
 460              	.LVL24:
 461              	.L24:
 462              	.LBB4:
 133:Src/main.c    ****       case 'b':
 463              		.loc 1 133 9 is_stmt 1 view .LVU127
 464 00e4 4021     		movs	r1, #64
 465 00e6 0A48     		ldr	r0, .L25+4
 466 00e8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 467              	.LVL25:
 468              	.L20:
 135:Src/main.c    ****     default:
 469              		.loc 1 135 9 view .LVU128
 470 00ec 8021     		movs	r1, #128
 471 00ee 0848     		ldr	r0, .L25+4
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 15


 472 00f0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 473              	.LVL26:
 474              	.L19:
 127:Src/main.c    ****     // LED to check: red (114)
 475              		.loc 1 127 45 discriminator 1 view .LVU129
 127:Src/main.c    ****     // LED to check: red (114)
 476              		.loc 1 127 12 discriminator 1 view .LVU130
 127:Src/main.c    ****     // LED to check: red (114)
 477              		.loc 1 127 20 is_stmt 0 discriminator 1 view .LVU131
 478 00f4 124B     		ldr	r3, .L25+52
 479 00f6 DB69     		ldr	r3, [r3, #28]
 127:Src/main.c    ****     // LED to check: red (114)
 480              		.loc 1 127 12 discriminator 1 view .LVU132
 481 00f8 9B06     		lsls	r3, r3, #26
 482 00fa FBD5     		bpl	.L19
 130:Src/main.c    ****     switch (received_char) {
 483              		.loc 1 130 5 is_stmt 1 view .LVU133
 130:Src/main.c    ****     switch (received_char) {
 484              		.loc 1 130 35 is_stmt 0 view .LVU134
 485 00fc 0F4B     		ldr	r3, .L25+48
 486 00fe 9B8C     		ldrh	r3, [r3, #36]
 130:Src/main.c    ****     switch (received_char) {
 487              		.loc 1 130 13 view .LVU135
 488 0100 DBB2     		uxtb	r3, r3
 489              	.LVL27:
 131:Src/main.c    ****       case 'r':
 490              		.loc 1 131 5 is_stmt 1 view .LVU136
 491 0102 622B     		cmp	r3, #98
 492 0104 F2D0     		beq	.L20
 493 0106 722B     		cmp	r3, #114
 494 0108 F4D1     		bne	.L19
 495 010a EBE7     		b	.L24
 496              	.L26:
 497              		.align	2
 498              	.L25:
 499 010c 00100240 		.word	1073876992
 500 0110 00080048 		.word	1207961600
 501 0114 FFFEFFFF 		.word	-257
 502 0118 FFFDFFFF 		.word	-513
 503 011c FFFBFFFF 		.word	-1025
 504 0120 FFF7FFFF 		.word	-2049
 505 0124 FFFFFDFF 		.word	-131073
 506 0128 FFFFFBFF 		.word	-262145
 507 012c FFFFF7FF 		.word	-524289
 508 0130 FFFFDFFF 		.word	-2097153
 509 0134 FFFFBFFF 		.word	-4194305
 510 0138 FFFF7FFF 		.word	-8388609
 511 013c 00480040 		.word	1073760256
 512 0140 00380140 		.word	1073821696
 513              	.LBE4:
 514              		.cfi_endproc
 515              	.LFE40:
 517              		.text
 518              	.Letext0:
 519              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 520              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 521              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 16


 522              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 523              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 524              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 525              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 526              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 527              		.file 10 "<built-in>"
ARM GAS  /var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:19     .text.transmitCharacter:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:25     .text.transmitCharacter:00000000 transmitCharacter
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:52     .text.transmitCharacter:00000010 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:57     .text.transmitString:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:63     .text.transmitString:00000000 transmitString
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:113    .text._Error_Handler:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:119    .text._Error_Handler:00000000 _Error_Handler
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:137    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:142    .text.SystemClock_Config:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:148    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:251    .text.SystemClock_Config:0000006c $d
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:256    .text.main:00000000 $t
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:262    .text.main:00000000 main
/var/folders/5r/xb8hq6p128d37tsfvtb6dnd00000gn/T//ccrTvNC9.s:499    .text.main:0000010c $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
memset
HAL_GPIO_Init
HAL_GPIO_TogglePin
